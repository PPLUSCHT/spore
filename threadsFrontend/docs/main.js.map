{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/Unfound/unfound-page/unfound-page.component.ts","./src/app/components/Unfound/unfound-page/unfound-page.component.html","./src/app/components/commentComponents/abstract-comment/abstract-comment.component.ts","./src/app/components/commentComponents/comment-upvote/comment-upvote.component.ts","./src/app/components/commentComponents/comment-upvote/comment-upvote.component.html","./src/app/components/commentComponents/logged-in-comment/logged-in-comment.component.ts","./src/app/components/commentComponents/logged-in-comment/logged-in-comment.component.html","./src/app/components/commentComponents/not-logged-in-comment/not-logged-in-comment.component.ts","./src/app/components/commentComponents/not-logged-in-comment/not-logged-in-comment.component.html","./src/app/components/commentComponents/user-comment/user-comment.component.ts","./src/app/components/commentComponents/user-comment/user-comment.component.html","./src/app/components/homepageComponents/homepage/homepage.component.ts","./src/app/components/homepageComponents/homepage/homepage.component.html","./src/app/components/homepageComponents/nav-bar/nav-bar.component.ts","./src/app/components/homepageComponents/nav-bar/nav-bar.component.html","./src/app/components/homepageComponents/post-card-container/post-card-container.component.ts","./src/app/components/homepageComponents/post-card-container/post-card-container.component.html","./src/app/components/homepageComponents/post-card/post-card.component.ts","./src/app/components/homepageComponents/post-card/post-card.component.html","./src/app/components/homepageComponents/top-bar/top-bar.component.ts","./src/app/components/homepageComponents/top-bar/top-bar.component.html","./src/app/components/loginComponents/login/login.component.ts","./src/app/components/loginComponents/login/login.component.html","./src/app/components/loginComponents/sign-up/sign-up.component.ts","./src/app/components/loginComponents/sign-up/sign-up.component.html","./src/app/components/postComponents/abstract-post-body/abstract-post-body.component.ts","./src/app/components/postComponents/abstract-post-body/abstract-post-body.component.html","./src/app/components/postComponents/comment-container/comment-container.component.ts","./src/app/components/postComponents/comment-container/comment-container.component.html","./src/app/components/postComponents/logged-in-post/logged-in-post.component.ts","./src/app/components/postComponents/logged-in-post/logged-in-post.component.html","./src/app/components/postComponents/not-logged-in-post/not-logged-in-post.component.ts","./src/app/components/postComponents/not-logged-in-post/not-logged-in-post.component.html","./src/app/components/postComponents/posts-container/posts-container.component.ts","./src/app/components/postComponents/posts-container/posts-container.component.html","./src/app/components/postComponents/user-post/user-post.component.ts","./src/app/components/postComponents/user-post/user-post.component.html","./src/app/components/searchComponents/search-results/search-results/search-results.component.ts","./src/app/components/searchComponents/search-results/search-results/search-results.component.html","./src/app/components/textInputComponents/abstract-text-box/abstract-text-box.component.ts","./src/app/components/textInputComponents/abstract-text-box/abstract-text-box.component.html","./src/app/components/textInputComponents/character-count/character-count.component.ts","./src/app/components/textInputComponents/character-count/character-count.component.html","./src/app/components/textInputComponents/comment-edit/comment-edit.component.ts","./src/app/components/textInputComponents/comment-edit/comment-edit.component.html","./src/app/components/textInputComponents/new-post/new-post.component.ts","./src/app/components/textInputComponents/new-post/new-post.component.html","./src/app/components/textInputComponents/post-edit/post-edit.component.ts","./src/app/components/textInputComponents/post-edit/post-edit.component.html","./src/app/components/textInputComponents/reply-box/reply-box.component.ts","./src/app/components/textInputComponents/reply-box/reply-box.component.html","./src/app/directives/comment-type-directive.directive.ts","./src/app/directives/post-selector.directive.ts","./src/app/enums/ContentType.ts","./src/app/enums/Timeframe.ts","./src/app/enums/UpvoteScore.ts","./src/app/services/addZeroVote.ts","./src/app/services/auth/authorization.service.ts","./src/app/services/comment/comment-service.service.ts","./src/app/services/deletedComment/deleted-comment.service.ts","./src/app/services/errorHandler.ts","./src/app/services/headerInteceptor/header-intercept.service.ts","./src/app/services/homepage/homepage.service.ts","./src/app/services/localTime.ts","./src/app/services/post-data-storage/post-data-storage.service.ts","./src/app/services/post/post-data-service.service.ts","./src/app/services/previous-url/previous-url.service.ts","./src/app/services/routeCreator.ts","./src/app/services/user/user-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomepageComponent } from './components/homepageComponents/homepage/homepage.component';\nimport { PostsContainerComponent } from './components/postComponents/posts-container/posts-container.component';\nimport { LoginComponent } from './components/loginComponents/login/login.component';\nimport { NewPostComponent } from './components/textInputComponents/new-post/new-post.component';\nimport { SignUpComponent } from './components/loginComponents/sign-up/sign-up.component';\nimport { SearchResultsComponent } from './components/searchComponents/search-results/search-results/search-results.component';\nimport { UnfoundPageComponent } from './components/Unfound/unfound-page/unfound-page.component';\n\nconst routes: Routes = [\n  {path: '', component: HomepageComponent},\n  {path: 'Posts/Draft', component: NewPostComponent},\n  {path: 'Posts/:id', component: PostsContainerComponent},\n  {path: 'Login', component: LoginComponent},\n  {path: 'Signup', component: SignUpComponent},\n  {path: 'Search', component: SearchResultsComponent},\n  {path: '**', component: UnfoundPageComponent}\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{ onSameUrlNavigation: 'reload' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { PreviousUrlService } from './services/previous-url/previous-url.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  title = 'threadsFrontend';\n  \n  constructor(private previousUrl: PreviousUrlService){\n    previousUrl.begin()\n  }\n}\n","<app-nav-bar></app-nav-bar>\n<div class=\"routed-content\">\n    <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { HeaderInterceptService } from './services/headerInteceptor/header-intercept.service';\nimport { LoggedInCommentComponent } from './components/commentComponents/logged-in-comment/logged-in-comment.component';\nimport { NotLoggedInCommentComponent } from './components/commentComponents/not-logged-in-comment/not-logged-in-comment.component';\nimport { CommentTypeDirective} from './directives/comment-type-directive.directive';\nimport { AbstractCommentComponent } from './components/commentComponents/abstract-comment/abstract-comment.component';\nimport { UserCommentComponent } from './components/commentComponents/user-comment/user-comment.component';\nimport { CommentUpvoteComponent } from './components/commentComponents/comment-upvote/comment-upvote.component';\nimport { ReplyBoxComponent } from './components/textInputComponents/reply-box/reply-box.component';\nimport { FormsModule,  ReactiveFormsModule } from '@angular/forms';\nimport { AbstractTextBoxComponent } from './components/textInputComponents/abstract-text-box/abstract-text-box.component';\nimport { CommentEditComponent } from './components/textInputComponents/comment-edit/comment-edit.component';\nimport { CommentContainerComponent } from './components/postComponents/comment-container/comment-container.component';\nimport { LoginComponent } from './components/loginComponents/login/login.component';\nimport { PostEditComponent } from './components/textInputComponents/post-edit/post-edit.component';\nimport { AbstractPostBodyComponent } from './components/postComponents/abstract-post-body/abstract-post-body.component';\nimport { NotLoggedInPostComponent } from './components/postComponents/not-logged-in-post/not-logged-in-post.component';\nimport { LoggedInPostComponent } from './components/postComponents/logged-in-post/logged-in-post.component';\nimport { UserPostComponent } from './components/postComponents/user-post/user-post.component';\nimport { TopBarComponent } from './components/homepageComponents/top-bar/top-bar.component';\nimport { PostsContainerComponent } from './components/postComponents/posts-container/posts-container.component';\nimport { PostSelectorDirective } from './directives/post-selector.directive';\nimport { PostCardComponent } from './components/homepageComponents/post-card/post-card.component';\nimport { HomepageComponent } from './components/homepageComponents/homepage/homepage.component';\nimport { NewPostComponent } from './components/textInputComponents/new-post/new-post.component';\nimport { PostCardContainerComponent } from './components/homepageComponents/post-card-container/post-card-container.component';\nimport { SignUpComponent } from './components/loginComponents/sign-up/sign-up.component';\nimport { NavBarComponent } from './components/homepageComponents/nav-bar/nav-bar.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { CharacterCountComponent } from './components/textInputComponents/character-count/character-count.component';\nimport { SearchResultsComponent } from './components/searchComponents/search-results/search-results/search-results.component';\nimport { UnfoundPageComponent } from './components/Unfound/unfound-page/unfound-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AbstractCommentComponent,\n    CommentTypeDirective,\n    LoggedInCommentComponent,\n    NotLoggedInCommentComponent,\n    UserCommentComponent,\n    CommentUpvoteComponent,\n    ReplyBoxComponent,\n    AbstractTextBoxComponent,\n    CommentEditComponent,\n    CommentContainerComponent,\n    LoginComponent,\n    PostEditComponent,\n    AbstractPostBodyComponent,\n    NotLoggedInPostComponent,\n    LoggedInPostComponent,\n    UserPostComponent,\n    TopBarComponent,\n    PostSelectorDirective,\n    PostCardComponent,\n    HomepageComponent,\n    NewPostComponent,\n    PostsContainerComponent,\n    PostCardContainerComponent,\n    SignUpComponent,\n    NavBarComponent,\n    CharacterCountComponent,\n    SearchResultsComponent,\n    UnfoundPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InfiniteScrollModule\n  ],\n  providers: [{provide: HTTP_INTERCEPTORS, useClass: HeaderInterceptService, multi: true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-unfound-page',\n  templateUrl: './unfound-page.component.html',\n  styleUrls: ['./unfound-page.component.css']\n})\nexport class UnfoundPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <span>The content you are looking for never existed or no longer does. Please navigate back to the home page if you are lost!</span>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { ReceivedComment } from 'src/app/interfaces/recievedObjects/ReceivedComment';\nimport { AuthorizationService } from 'src/app/services/auth/authorization.service';\nimport { CommentService } from 'src/app/services/comment/comment-service.service';\nimport { PostDataStorageService } from 'src/app/services/post-data-storage/post-data-storage.service';\nimport { BehaviorSubject, first } from 'rxjs';\nimport { Router} from '@angular/router';\nimport { DeletedCommentService } from 'src/app/services/deletedComment/deleted-comment.service';\n\n@Component({\n  selector: 'app-abstract-comment',\n  templateUrl: './abstract-comment.component.html',\n  styleUrls: ['../user-comment/user-comment.component.css'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class AbstractCommentComponent implements OnInit{\n\n  @Input() commentData!: ReceivedComment;\n  @Input() postID!: number | null;\n\n  childComments:Array<ReceivedComment> = []\n  childCommentSubject = new BehaviorSubject<Array<ReceivedComment>>([])\n  expand: boolean = false;\n  childrenLoaded: boolean = false;\n  childrenExist:boolean = false;\n  childrenCount:number = 0;\n  deleted!:boolean\n\n  constructor(\n              protected service:CommentService,\n              protected authService: AuthorizationService,\n              protected postDataStorage: PostDataStorageService,\n              protected deletedComment: DeletedCommentService\n              )\n  { \n  }\n\n  ngOnInit(): void {\n    if(this.commentData.userID == 0){\n      this.deleted = true\n    }\n    else{\n      this.deleted = false\n    }\n    this.postDataStorage.getID().subscribe((id) => this.postID = id)\n    this.childCommentSubject.subscribe((comments) => {\n        this.childComments = comments;\n        this.updateChildrenExist();  \n    })\n    this.deletedComment.getDeletedID().subscribe((id) => this.removeComment(id))\n    this.getChildren()  \n  }\n\n  protected getChildren(): void {\n    this.service.getChildren(this.commentData.commentID)\n                .subscribe({\n                  next: (comments) => {\n                                          this.updateSubject(comments);\n                                          this.childrenLoaded = true\n                                      },\n                  error: (error) => {console.error(error); alert(error)}\n                })\n  }\n\n  public expandButton(): void{\n    if (!this.childrenLoaded){\n      this.getChildren()\n    }\n    this.expand = !this.expand\n  }\n\n  public removeComment(id: number): void {\n    this.childComments = this.childComments.filter((comment) => comment.commentID !== id)\n  }\n\n  protected updateSubject(comments: Array<ReceivedComment>): void{\n    this.childCommentSubject.next(comments)\n  }\n\n  protected pushToSubject(comment: ReceivedComment): void{\n    let comments:Array<ReceivedComment> = this.childCommentSubject.value\n    comments.push(comment)\n    this.updateSubject(comments)\n  }\n\n  protected updateChildrenExist(): void{\n    this.childrenExist = this.childCommentSubject.value.length > 0 ? true : false\n    this.childrenCount = this.childCommentSubject.value.length\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { UpvoteScore } from 'src/app/enums/UpvoteScore';\nimport { CommentVoteRequest } from 'src/app/interfaces/requestObjects/CommentVoteRequest';\nimport { AuthorizationService } from 'src/app/services/auth/authorization.service';\nimport { CommentService } from 'src/app/services/comment/comment-service.service';\n\n@Component({\n  selector: 'app-comment-upvote',\n  templateUrl: './comment-upvote.component.html',\n  styleUrls: ['./comment-upvote.component.css']\n})\nexport class CommentUpvoteComponent implements OnInit {\n\n  @Input() commentID!:number;\n\n  @Input() vote!:UpvoteScore;\n  @Output() voteChange = new EventEmitter<UpvoteScore>();\n\n  @Input() voteTotal!: number;\n  @Output() voteTotalChange = new EventEmitter<number>();\n\n  public upvoteHighlight:boolean = false;\n  public downvoteHighlight:boolean = false;\n\n  constructor(private service: CommentService, private auth: AuthorizationService) { }\n\n  ngOnInit(): void {\n    if(this.vote == UpvoteScore.Upvote){\n      this.upvoteHighlight = true\n    }\n    else if(this.vote == UpvoteScore.Downvote){\n      this.downvoteHighlight = true\n    }\n  }\n\n  public changeVote(previousVote:UpvoteScore , vote:UpvoteScore){\n    \n    this.vote = vote;\n    this.voteChange.emit(this.vote);\n\n    this.voteTotal += -1*previousVote + vote;\n    this.voteTotalChange.emit(this.voteTotal);\n\n    if(this.vote === UpvoteScore.Upvote){\n      this.upvoteHighlight = true;\n      this.downvoteHighlight = false;\n    }\n    else if(this.vote === UpvoteScore.Downvote){\n      this.upvoteHighlight = false;\n      this.downvoteHighlight = true;\n    }\n    else{\n      this.downvoteHighlight = false;\n      this.upvoteHighlight = false;\n    }\n  }\n\n  public upvoteButton(): void{\n\n    const commentVote:CommentVoteRequest = {\n      value: UpvoteScore.Upvote,\n      userID: this.auth.getUserID()!,\n      commentID: this.commentID\n    }\n\n    if(this.vote === UpvoteScore.Upvote){\n      this.service.deleteCommentVote(commentVote\n      ).subscribe({\n                    next: () => {this.changeVote(1,0)},\n                    error: (err) => {console.error(err)}\n                  })\n    }\n\n    else if(this.vote === UpvoteScore.Downvote){\n      this.service.patchCommentVote(\n        commentVote\n      ).subscribe({\n        next: (vote) => this.changeVote(-1, vote.value),\n        error: (err) => {console.error(err)}\n      })\n    }\n\n    else{\n      this.service.postCommentVote(\n        commentVote\n      ).subscribe({\n        next: (vote) => this.changeVote(0, vote.value),\n        error: (err) => {console.error(err)}\n      })\n    }\n  }\n\n  public downvoteButton(): void{\n\n    const commentVote:CommentVoteRequest = {\n      value: UpvoteScore.Downvote,\n      userID: this.auth.getUserID()!,\n      commentID: this.commentID\n    }\n\n    if(this.vote === UpvoteScore.Downvote){\n      this.service.deleteCommentVote(\n        commentVote\n      ).subscribe({\n        next: () => this.changeVote(-1, 0),\n        error: (err) => {console.error(err)}\n      })\n    }\n\n    else if(this.vote === UpvoteScore.Upvote){\n      this.service.patchCommentVote(\n        commentVote\n      ).subscribe({\n        next: (vote) => this.changeVote(1, vote.value),\n        error: (err) => {console.error(err)}\n      })\n    }\n\n    else{\n      this.service.postCommentVote(\n       commentVote\n      ).subscribe({\n        next: (vote) => this.changeVote(0, vote.value),\n        error: (err) => {console.error(err)}\n      })\n    }\n  }\n\n}\n","<div class=\"upvote-container\">\n    <img [ngClass]=\"upvoteHighlight ? \n    'highlighted-upvote' : 'unhighlighted-upvote'\" \n    (click) = \"upvoteButton()\" src=\"assets/svg/down.svg\"/>\n    <div [ngClass]= \"voteTotal >= 0 ? \n    'upvoted-total' : 'downvoted-total'\" >\n        {{voteTotal}}\n    </div>\n    <img [ngClass]= \"downvoteHighlight ? \n    'highlighted-downvote' : 'unhighlighted-downvote'\" \n    (click) = \"downvoteButton()\" src=\"assets/svg/down.svg\"/>\n</div>","import { Component } from '@angular/core';\nimport { CommentService } from 'src/app/services/comment/comment-service.service';\nimport { AbstractCommentComponent } from '../abstract-comment/abstract-comment.component';\nimport { ReceivedComment } from 'src/app/interfaces/recievedObjects/ReceivedComment';\n\n\n@Component({\n  selector: 'app-logged-in-comment',\n  templateUrl: './logged-in-comment.component.html',\n  providers: [CommentService],\n  styleUrls: ['../user-comment/user-comment.component.css']\n})\nexport class LoggedInCommentComponent extends AbstractCommentComponent{\n\n  protected replyDialog: boolean = false\n\n  public replyButton(){\n    this.replyDialog = true\n    this.expand = true\n  }\n\n  public cancelButton(){\n    this.replyDialog = false\n  }\n\n  public addComment(comment:ReceivedComment){\n    this.pushToSubject(comment)\n    this.childrenExist = true\n    this.commentData.childIDs?.push(comment.commentID)\n    this.expand = true\n  }\n}","<div class=\"comment_and_children\">\n    <div class=\"comment\">\n        <div class=\"user-info-bar\">\n            <span class=\"poster-name\">{{commentData.posterName}}</span>\n            <span> | </span>\n            <span class=\"time\">{{commentData.timeString}}</span>\n        </div>\n        <div class=\"content-and-votes\">\n            <ng-container *ngIf=\"!this.deleted\">\n                <app-comment-upvote \n                    [commentID]=\"this.commentData.commentID\"\n                    [(vote)]=\"this.commentData.userVote!\"\n                    [(voteTotal)]=\"this.commentData.voteTotal\">\n                </app-comment-upvote>\n            </ng-container>\n            <div class=\"content\">\n                {{this.commentData.content}}\n            </div>\n        </div>\n        <ng-container *ngIf=\"!this.deleted\">\n            <div class=\"actionsBar\">\n                <button class=\"reply\" (click)=\"replyButton()\">\n                    <img class=\"button-graphic\" src=\"assets/svg/comment.svg\" alt=\"\">\n                    <span>Reply</span>\n                </button>\n            </div>\n        </ng-container>\n        <ng-container *ngIf=\"this.childrenExist && !this.expand\">\n            <span class=\"load-children\" (click)=\"expandButton()\">Load {{this.childrenCount}} Replies</span>\n        </ng-container>\n    </div>\n    <ng-container *ngIf=\"expand\">\n        <div class=\"children-and-vl-container\">\n            <div class=\"vertical-line\" (click)=\"expandButton()\"></div>\n            <div class=\"children\">\n                <ng-container replyDialog *ngIf=\"this.replyDialog\" class=\"reply-container\">\n                    <app-reply-box [commentID]=\"this.commentData.commentID\"\n                                   [postID]=\"this.postID!\"\n                                   (deleteDialog)=\"cancelButton()\"\n                                   (newComment)=\"addComment($event)\"\n                    ></app-reply-box>\n                </ng-container>\n                <ul *ngFor=\"let comment of this.childComments\">\n                    <li>\n                        <ng-container *appCommentType=\"comment\"></ng-container>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </ng-container>\n</div>","import { Component } from '@angular/core';\nimport { AbstractCommentComponent } from '../abstract-comment/abstract-comment.component';\n\n@Component({\n  selector: 'app-not-logged-in-comment',\n  templateUrl: './not-logged-in-comment.component.html',\n  styleUrls: ['../user-comment/user-comment.component.css', './not-logged-in-comment.component.css']\n})\nexport class NotLoggedInCommentComponent extends AbstractCommentComponent {\n\n}\n","<div class=\"comment_and_children\">\n    <div class=\"comment\">\n        <div class=\"user-info-bar\">\n            <span class=\"poster-name\">{{commentData.posterName}}</span>\n            <span> | </span>\n            <span class=\"time\">{{commentData.timeString}}</span>\n        </div>\n        <div class=\"content-and-votes\">\n            <ng-container *ngIf=\"!this.deleted\">\n                <div class=\"votes\">\n                    <span>{{commentData.voteTotal}}</span>\n                </div>\n            </ng-container>\n            <div class=\"content\">{{commentData.content}}</div>\n        </div>\n        <ng-container *ngIf=\"this.childrenExist && !this.expand\">\n            <span class=\"load-children\" (click)=\"expandButton()\">Load {{this.childrenCount}} Replies</span>\n        </ng-container>\n    </div>\n    <ng-container *ngIf=\"expand\">\n        <div class=\"children-and-vl-container\">\n            <div class=\"vertical-line\" (click)=\"expandButton()\"></div>\n            <div class=\"children\">\n                <ul *ngFor=\"let comment of this.childComments\">\n                    <li>\n                        <ng-container *appCommentType=\"comment\"></ng-container>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </ng-container>\n</div>","import { Component} from '@angular/core';\nimport { LoggedInCommentComponent } from '../logged-in-comment/logged-in-comment.component';\n\n@Component({\n  selector: 'app-user-comment',\n  templateUrl: './user-comment.component.html',\n  styleUrls: ['./user-comment.component.css']\n})\n\nexport class UserCommentComponent extends LoggedInCommentComponent{\n  \n  editMode:boolean = false;\n\n  public updateContent(content: string){\n    this.commentData.content = content\n    this.closeEdit()\n  }\n\n  public deleteCommentButton(){\n    this.service.deleteComment(this.commentData.commentID)\n                .subscribe({\n                  next: (id) => \n                                {\n                                  if(this.childrenExist){\n                                    this.commentData.userID = 0\n                                    this.commentData.content = \"deleted\"\n                                    this.commentData.posterName = \"deleted\"\n                                    this.deleted = true\n                                  }\n                                  else{\n                                    this.deletedComment.updateID(id)\n                                  }\n                                },\n                  error: (err) => {alert(`Something went wrong: ${err}`)}\n                })\n  }\n\n  public editButton(){\n    this.editMode = true;\n  }\n\n  public closeEdit(){\n    this.editMode = false;\n  }\n}\n","<div class=\"comment-and-children\">\n    <div class=\"comment\">\n        <div class=\"user-info-bar\">\n            <span class=\"poster-name\">{{commentData.posterName}}</span>\n            <span> | </span>\n            <span class=\"time\">{{commentData.timeString}}</span>\n        </div>\n        <div class=\"content-and-votes\">\n            <ng-container *ngIf=\"!this.deleted\">\n                <app-comment-upvote \n                    [commentID]=\"this.commentData.commentID\"\n                    [(vote)]=\"this.commentData.userVote!\"\n                    [(voteTotal)]=\"this.commentData.voteTotal\">\n                </app-comment-upvote>\n            </ng-container>\n            <div class=\"content\">\n                <div *ngIf=\"!editMode\">\n                    {{this.commentData.content}}\n                </div>\n                <app-comment-edit *ngIf=\"editMode\" \n                                  [(commentData)]=\"this.commentData\"\n                                  [text]=\"this.commentData.content\"\n                                  (deleteDialog)=\"closeEdit()\"\n                                  (commentDataChange)=\"closeEdit()\"\n                                  >\n                </app-comment-edit>\n            </div>\n        </div>\n        <ng-container *ngIf=\"!this.deleted && !this.editMode\">\n            <div class=\"button-container\">\n                <button class=\"reply\" (click)=\"replyButton()\">\n                    <img class=\"button-graphic\" src=\"assets/svg/comment.svg\" alt=\"\">\n                    <span>Reply</span>\n                </button>\n                <button class=\"edit\" (click)=\"editButton()\">\n                    <img class=\"button-graphic\" src=\"assets/svg/edit.svg\" alt=\"\">\n                    <span>Edit</span>\n                </button>\n                <button class=\"delete\" (click)=\"deleteCommentButton()\">\n                    <img class=\"button-graphic\" src=\"assets/svg/delete.svg\" alt=\"\">\n                    <span>Delete</span>\n                </button>\n            </div>\n        </ng-container>\n        <ng-container *ngIf=\"this.childrenExist && !this.expand\">\n            <span class=\"load-children\" (click)=\"expandButton()\">Load {{this.childrenCount}} Replies</span>\n        </ng-container>\n    </div>\n    <ng-container *ngIf=\"expand\">\n        <div class=\"children-and-vl-container\">\n            <div class=\"vertical-line\" (click)=\"expandButton()\"></div>\n            <div class=\"children\">\n                <ng-container replyDialog *ngIf=\"this.replyDialog\" class=\"reply-container\">\n                    <app-reply-box [commentID]=\"this.commentData.commentID\"\n                                   [postID]=\"this.postID!\"\n                                   (deleteDialog)=\"cancelButton()\"\n                                   (newComment)=\"addComment($event)\"\n                    ></app-reply-box>\n                </ng-container>\n                <ul *ngFor=\"let comment of this.childComments\">\n                    <li>\n                        <ng-container *appCommentType=\"comment\"></ng-container>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </ng-container>\n</div>","import { AfterContentInit, Component} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Timeframe } from 'src/app/enums/Timeframe';\nimport { AuthorizationService } from 'src/app/services/auth/authorization.service';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements AfterContentInit{\n  \n  homepageTimeframe:Timeframe = Timeframe.Alltime\n  loginStatus!:boolean\n\n  constructor(private auth: AuthorizationService, private router:Router){}\n\n  ngAfterContentInit(): void {\n    this.loginStatus = this.auth.testLogin()\n  }\n}\n","<div class=\"homepage\">\n    <app-top-bar [(currentTimeframe)]=\"homepageTimeframe\" [(loggedIn)]=\"loginStatus\"></app-top-bar>\n    <app-post-card-container [timeframe]=\"homepageTimeframe\"></app-post-card-container>\n</div>\n","import { AfterContentChecked, Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { debounceTime, map, switchMap } from 'rxjs';\nimport { PostTitleDTO } from 'src/app/interfaces/recievedObjects/PostTitleDTO';\nimport { AuthorizationService } from 'src/app/services/auth/authorization.service';\nimport { PostDataService } from 'src/app/services/post/post-data-service.service';\n\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\n\nexport class NavBarComponent implements AfterContentChecked, OnInit {\n\n  loggedIn!:boolean\n  results!:Array<PostTitleDTO>\n  searchForm = new FormControl(\"search\")\n  searchResults = false\n  mouseFocus = 0\n  searchFocus = false\n  clicked = false\n\n  constructor(private auth: AuthorizationService, private router:Router, private postService: PostDataService) { \n    this.router.routeReuseStrategy.shouldReuseRoute = () => {\n      return false;\n    }\n  }\n\n  ngOnInit(): void {\n    this.searchForm.valueChanges\n        .pipe(\n          debounceTime(500),\n          switchMap((str) =>\n            {\n              str = str ? str : \"\"          \n              return this.postService.getSuggested(str)\n            }\n          )\n        )\n        .subscribe((postTitles) => this.results = postTitles)\n  }\n\n  ngAfterContentChecked(): void {\n    this.auth.getLoginSubject().subscribe(\n      (status) => {\n        if(this.loggedIn == true && status == false){\n          this.loggedIn = status\n          this.router.navigateByUrl(this.router.url)\n        }\n        this.loggedIn = status\n      }\n    )\n  }\n\n  public loginButton(): void {  \n    this.router.navigateByUrl(\"Login\")\n  }\n\n  public logoutButton(): void {\n    this.auth.logout()\n    this.router.navigateByUrl(this.router.url)\n  }\n\n  public homeButton(): void{\n    this.router.navigateByUrl(\"\")\n  }\n\n  public newPostButton(): void{\n    this.router.navigateByUrl(\"Posts/Draft\")\n  }\n\n  public signUpButton(): void{\n    this.router.navigateByUrl(\"Signup\")\n  }\n\n  public getSuggestions(): void{\n    let query:string = this.searchForm.value ? this.searchForm.value : \"\"\n    this.postService.getSuggested(query)\n        .subscribe((posts) => this.results = posts)\n  }\n\n  public selectionChange(): void{\n    if(this.clicked == false){\n      this.searchForm.setValue(\"\")\n      this.clicked = true\n    }\n    this.searchResults = !this.searchResults\n  }\n\n  public routeToPost(postID: number): void{\n    this.searchResults = false\n    this.mouseFocus = 0\n    this.router.navigateByUrl(`Posts/${postID}`)\n  }\n\n  public routeToSearch(): void{\n    this.searchResults = false\n    this.searchFocus = false\n    this.router.navigateByUrl(`Search?query=${this.searchForm.value ? this.searchForm.value : \"\"}&pageNumber=0`)\n  }\n\n}\n","<div class=\"nav-bar\">\n    <div class=\"logo\">\n        Spore\n    </div>\n    <div class=\"search-container\">\n        <input type=\"text\" class=\"search-input\" #searchInput [formControl]=\"searchForm\"  \n                (focus)=\"selectionChange()\" (blur)=\"selectionChange()\" \n                (keydown.enter)=\"searchInput.blur(); routeToSearch()\">\n        <div class=\"results-container\" *ngIf=\"this.searchResults || this.mouseFocus != 0 || this.searchFocus\">\n            <ul *ngFor=\"let result of results\">\n                <li (click)=\"routeToPost(result.postID)\" (mouseover)=\"this.mouseFocus = result.postID\" (mouseleave)=\"this.mouseFocus = 0\">\n                    <span class=\"result\">{{result.title}}</span>\n                </li>\n            </ul>\n            <span class=\"see-results\" (click)=\"routeToSearch()\" (mouseover)=\"this.searchFocus = true\" (mouseleave)=\"this.searchFocus = false\">Search</span>\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button class=\"action-button\" (click)=\"this.homeButton()\">\n            <span>Home</span>\n        </button>\n        <ng-container *ngIf=\"loggedIn\">\n            <button class=\"action-button\" (click)=\"this.newPostButton()\">\n                <span>New Post</span>\n            </button>\n            <button class=\"action-button\" (click)=\"this.logoutButton()\">\n                <span>Logout</span>\n            </button>\n        </ng-container>\n        <ng-container *ngIf=\"!loggedIn\">\n            <button class=\"action-button\" (click)=\"this.loginButton()\">\n                <span>Login</span>\n            </button>\n            <button class=\"action-button\" (click)=\"this.signUpButton()\">\n                <span>Sign up</span>\n            </button>\n        </ng-container>\n    </div>\n</div>\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { Timeframe } from 'src/app/enums/Timeframe';\nimport { ReceivedPost } from 'src/app/interfaces/recievedObjects/ReceivedPost';\nimport { HomepageService } from 'src/app/services/homepage/homepage.service';\n\n@Component({\n  selector: 'app-post-card-container',\n  templateUrl: './post-card-container.component.html',\n  styleUrls: ['./post-card-container.component.css']\n})\nexport class PostCardContainerComponent implements OnInit, OnChanges {\n\n  @Input() timeframe! : Timeframe;\n  posts = new BehaviorSubject<Array<ReceivedPost>>([])\n  postsExist = false\n  page = 0\n  outOfPosts = false\n  loading = false\n\n  constructor(private homepageService: HomepageService) { }\n\n  ngOnInit(): void {\n    this.posts.subscribe(\n      (p) => {this.postsExist = p.length > 0}\n    )\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n      this.posts.next([])\n      this.page = 0\n      this.loadPage(0)\n  }\n\n  public loadPage(page:number): void {\n\n    this.loading = true\n    this.outOfPosts = false\n\n    switch (this.timeframe){\n\n      case Timeframe.Alltime:\n        this.homepageService.getTopAllTime(page)\n            .subscribe({\n              next: (p) => {this.updatePosts(p)}       \n            })\n          break;\n\n      case Timeframe.Year:\n        this.homepageService.getTopYear(page)\n            .subscribe({\n              next: (p) => {this.updatePosts(p)}\n            })\n          break;\n\n      case Timeframe.Month:\n        this.homepageService.getTopMonth(page)\n            .subscribe({\n              next: (p) => {this.updatePosts(p)}\n            })\n        break;\n\n      case Timeframe.Week:\n        this.homepageService.getTopWeek(page)\n            .subscribe({\n              next: (p) => {this.updatePosts(p)}\n            })\n        break;\n\n      case Timeframe.Today:\n        this.homepageService.getTopToday(page)\n            .subscribe({\n              next: (p) => {this.updatePosts(p)}\n            })\n        break;\n      \n      default:\n        this.homepageService.getTopAllTime(page)\n            .subscribe({\n              next: (p) => {this.updatePosts(p)}       \n            })\n    }\n  }\n\n  public updatePosts(newPosts: Array<ReceivedPost>) : void{\n    this.page += 1\n    if(newPosts.length > 0){\n      this.posts.next([...this.posts.value,...newPosts])\n      this.loading = false\n      this.outOfPosts = false\n    }\n    else{\n      this.loading = false\n      this.outOfPosts = true\n    }\n  }\n\n  public onScroll() : void{\n    this.loadPage(this.page)\n  }\n\n}\n","<ng-container>\n    <div *ngIf=\"!postsExist && !this.loading\" class=\"empty-cards\">\n        There are no posts in this time window. Click new post to start a conversation!\n    </div>\n    <div *ngIf=\"!postsExist && this.loading\" class=\"empty-cards\">\n        <div *ngIf=\"this.loading\" class=\"loading-container\">\n            <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n        </div>\n    </div>\n    <div *ngIf=\"postsExist\" class=\"post-card-container\"\n        infiniteScroll\n        [infiniteScrollDistance]=\"1\"\n        [infiniteScrollThrottle]=\"1000\"\n        (scrolled)=\"onScroll()\">\n        <ul *ngFor=\"let post of posts | async\">\n            <li>\n                <app-post-card [postData]=\"post\"></app-post-card>\n            </li>\n        </ul>\n        <div *ngIf=\"this.loading\" class=\"loading-container\">\n            <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n        </div>\n        <div *ngIf=\"this.outOfPosts\" class=\"out-of-posts-container\">\n            No more posts for this time window\n        </div>\n    </div>\n</ng-container>\n","import { Component, ElementRef, Input, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ReceivedPost } from 'src/app/interfaces/recievedObjects/ReceivedPost';\nimport { PostDataStorageService } from 'src/app/services/post-data-storage/post-data-storage.service';\nimport { frontendRoute } from 'src/app/services/routeCreator';\n\n\n@Component({\n  selector: 'app-post-card',\n  templateUrl: './post-card.component.html',\n  styleUrls: ['./post-card.component.css']\n})\nexport class PostCardComponent implements OnInit{\n\n  constructor(private router: Router, private postDataStorage:PostDataStorageService, private renderer: Renderer2){}\n  \n  ngOnInit(): void {\n    let card = this.renderer.selectRootElement('.post-card', true)\n    let contentVotes = this.renderer.nextSibling(card)\n    console.log(contentVotes)\n  }\n  \n  @Input() postData!:ReceivedPost\n\n  public routeToPost():void{\n    this.postDataStorage.setData(this.postData)\n    this.router.navigateByUrl(`Posts/${this.postData.postID}`)\n  }\n\n\n\n}\n","<div class=\"post-card\" (click)=\"routeToPost()\">\n    <div class=\"user-info\">\n        <span>{{postData.posterName}} | {{postData.timeString}}</span>\n    </div>\n    <h3>{{postData.title}}</h3>\n    <div class=\"content-and-votes\">\n        <div class=\"votes\">{{postData.voteTotal}}</div>\n        <div class=\"content\" *ngIf=\"this\" #content>{{postData.content}}</div>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Timeframe } from 'src/app/enums/Timeframe';\nimport { AuthorizationService } from 'src/app/services/auth/authorization.service';\n\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.css']\n})\n\nexport class TopBarComponent implements OnChanges{\n\n  @Input() currentTimeframe!: Timeframe\n  @Output() currentTimeframeChange = new EventEmitter<Timeframe>()\n\n  @Input() loggedIn!: boolean\n  @Output() loggedInChange = new EventEmitter<boolean>()\n\n  loggedInText!:string\n\n  constructor(private router: Router, private auth: AuthorizationService){\n    this.updateLoginText()\n  }\n  \n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes[\"loggedIn\"]){\n      this.updateLoginText()\n    }\n  }\n\n  private updateLoginText(){\n    if(this.loggedIn == true){\n      this.loggedInText = \"Log out\"\n    }\n    else{\n      this.loggedInText = \"Login\"\n    }\n  }\n  \n  public updateTimeframe(val: Timeframe){\n    this.currentTimeframe = val\n    this.currentTimeframeChange.emit(this.currentTimeframe)\n  }\n\n  private routeToNewPost(){\n    this.router.navigateByUrl(`Posts/Draft`)\n  }\n\n  private routeToLogin(){\n    this.router.navigateByUrl(`Login`)\n  }\n\n  public loginButton(){\n    if(this.loggedIn == true){\n      this.auth.logout()\n      this.loggedIn = false\n      this.updateLoginText()\n      this.loggedInChange.emit(this.loggedIn)\n    }\n    else{\n      this.routeToLogin()\n    }\n  }\n\n  public newPostButton(){\n    if(this.loggedIn == true){\n      this.routeToNewPost()\n    }\n    else{\n      alert(\"You must be logged in to make a new post\")\n      this.routeToLogin()\n    }\n  }\n\n  public newProfileButton(){\n    this.router.navigateByUrl(`Signup`)\n  }\n\n}\n","<div>\n    <div class=\"timeframe-container\">\n        <button [ngClass]=\"this.currentTimeframe === 1 ? 'selected-button':'action-button'\" (click)=\"updateTimeframe(1)\">\n            <span class=\"button-text\">Today</span>\n        </button>\n        <button [ngClass]=\"this.currentTimeframe === 2 ? 'selected-button':'action-button'\" (click)=\"updateTimeframe(2)\">\n            <span class=\"button-text\">Week</span>\n        </button>\n        <button [ngClass]=\"this.currentTimeframe === 3 ? 'selected-button':'action-button'\" (click)=\"updateTimeframe(3)\">\n            <span class=\"button-text\">Month</span>\n        </button>\n        <button [ngClass]=\"this.currentTimeframe === 4 ? 'selected-button':'action-button'\" (click)=\"updateTimeframe(4)\">\n            <span class=\"button-text\">Year</span>\n        </button>\n        <button [ngClass]=\"this.currentTimeframe === 5 ? 'selected-button':'action-button'\" (click)=\"updateTimeframe(5)\">\n            <span class=\"button-text\">All Time</span>\n        </button>\n    </div>\n</div>","import { Component, OnInit, ɵinternalCreateApplication} from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router, RoutesRecognized } from '@angular/router';\nimport { Observable, filter, map, pairwise, switchMap, take} from 'rxjs';\nimport { UserRequest } from 'src/app/interfaces/requestObjects/UserRequest';\nimport { AuthorizationService } from 'src/app/services/auth/authorization.service';\nimport { PreviousUrlService } from 'src/app/services/previous-url/previous-url.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n\n  loginForm = this.formBuilder.group({\n    username: new FormControl(''),\n    password: new FormControl('')\n  })\n\n  private previousURL: string = '';\n\n  constructor(private formBuilder: FormBuilder, \n              private auth: AuthorizationService,\n              private router: Router,\n              private previousURLService: PreviousUrlService\n              ) \n              { }\n\n  ngOnInit(): void {\n    this.previousURLService.getPrevious()\n        .subscribe((url) => {this.previousURL = url; console.log(url)})\n  }\n\n  public onSubmit(): void{\n    if(!this.usernameValidator(this.loginForm.value.username)){\n      alert(\"Invalid Username\")\n      return\n    }\n    else if(!this.passwordValidator(this.loginForm.value.password)){\n      return\n    }\n    let user:UserRequest={\n      userName: this.loginForm.value.username!,\n      password: this.loginForm.value.password!\n    }\n    this.auth.login(user).subscribe(() => this.router.navigateByUrl(this.previousURL))\n  }\n\n  private usernameValidator(username:string|undefined|null): boolean{\n    return username && username.length <=20 && username.length >= 6 ? true: false\n  }\n\n  private passwordValidator(password:string|undefined|null): boolean{\n    \n    let numberRegex:RegExp = /.*[0-9].*/g\n    let capitalRegex:RegExp = /.*[A-Z].*/g\n    let lowercaseRegex:RegExp = /.*[a-z].*/g\n    let specialCharacter:RegExp = /.*[!@#$%^&*_+=;:<>?~].*/g\n    \n    if(!(password && password.length >= 8)){\n      alert(\"Password too short\")\n      return false\n    } \n\n    if(!password.match(numberRegex)){\n      console.log(password)\n      alert(\"Password doesn't contain a number\")\n      return false\n    }\n    \n    if(!password.match(capitalRegex)){\n      alert(\"Password doesn't contain a capital letter\")\n      return false\n    }\n\n    if(!password.match(lowercaseRegex)){\n      alert(\"Password doesn't contain a lowercase lettter\")\n      return false\n    }\n\n    if(!password.match(specialCharacter)){\n      alert(\"Password doesn't contain a special character: !@#$%^&*_+=;:<>?~\")\n      return false\n    }\n\n    return true;\n  }\n\n}\n","<div class=\"login-box\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"login-form\">\n        <label for=\"username\" class=\"username-label\">Username: </label>\n        <input id=\"username\" type=\"text\" formControlName=\"username\" class=\"username-input\">\n        <label for=\"password\" class=\"password-label\">Password: </label>\n        <input id=\"password\" type=\"text\" formControlName=\"password\" class=\"password-input\">\n        <button class=\"login-button\" type=\"submit\">Login</button>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, debounceTime, map, of, switchMap } from 'rxjs';\nimport { UserRequest } from 'src/app/interfaces/requestObjects/UserRequest';\nimport { AuthorizationService } from 'src/app/services/auth/authorization.service';\nimport { PreviousUrlService } from 'src/app/services/previous-url/previous-url.service';\nimport { UserService } from 'src/app/services/user/user-service.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit{\n  \n  newUserForm = this.formBuilder.group({\n    username: new FormControl(''),\n    password: new FormControl('')\n  })\n\n  previousURL:string = \"\"\n\n  usernameUnique = new BehaviorSubject<boolean>(false)\n\n  usernameLongEnough:boolean = false\n  usernameShortEnough:boolean = true\n  usernameUniqueBool:boolean = false\n\n  passwordLongEnough:boolean = false\n  passwordShortEnough:boolean = true\n  passwordContainsNumber: boolean = false\n  passwordContainsCapital: boolean = false\n  passwordContainsLowercase: boolean = false\n  passwordContainsSpecial: boolean = false\n\n  usernameValid: boolean = false\n  passwordValid: boolean = false\n\n  constructor(private formBuilder: FormBuilder, \n              private userService: UserService,\n              private auth: AuthorizationService,\n              private router: Router,\n              private previousURLService: PreviousUrlService) \n              { }\n  \n  ngOnInit(): void {\n    this.previousURLService.getPrevious().subscribe((url) => this.previousURL = url)\n    this.usernameUnique.subscribe((bool) => this.usernameUniqueBool = bool)\n    \n    this.newUserForm.get(\"password\")?.valueChanges.pipe(map((password) => this.passwordValidator(password)))\n                    .subscribe(() => this.passwordCheck())\n    \n    this.newUserForm.get(\"username\")?.valueChanges.pipe(\n        debounceTime(500),\n        map((username) => this.usernameValidator(username)),\n        switchMap((username) => {return this.uniqueCheck(username)})\n    ).subscribe((unique:boolean) => {\n      if(unique){\n        this.usernameUniqueBool = true\n      }\n      else{\n        this.usernameUniqueBool = false\n      }\n      this.usernameCheck()\n    })\n\n  }\n\n  public onSubmit(): void{\n\n    if(!this.usernameValid){\n      alert(\"Invalid Username\")\n      return\n    }\n\n    if(!this.passwordValid){\n      alert(\"Invalid Password\")\n      return\n    }\n\n    let user:UserRequest={\n      userName: this.newUserForm.value.username!,\n      password: this.newUserForm.value.password!\n    }\n\n    this.userService.createUser(user)\n        .subscribe({\n           next: () => {this.auth.login(user).subscribe({\n              next: () => this.router.navigateByUrl(this.previousURL),\n              error: (error) => {\n                  alert(\"User creation successful but login failed\")\n              }\n           }   \n           )},\n           error: (error) => {\n            alert(\"User creation failed. Use a different username please\")\n           }\n        })\n  }\n\n  public usernameValidator(username: string | undefined | null): string | undefined | null{\n\n    if(!username){\n      return\n    }\n\n    if(username.length > 20){\n      this.usernameShortEnough = false\n      return username\n    }\n    \n    this.usernameShortEnough = true\n\n    if(username.length < 6){\n      this.usernameLongEnough = false\n      return username\n    }\n\n    this.usernameLongEnough = true\n    return username\n\n  }\n\n  public uniqueCheck(username: string | undefined | null): Observable<boolean>{\n    if(this.usernameLongEnough && this.usernameShortEnough && username){\n      return this.userService.checkUsernameUniqueness(username)\n    }\n    return of(false)\n  }\n\n  public passwordValidator(password: string | undefined | null): string | undefined | null{\n    \n    let numberRegex:RegExp = /.*[0-9].*/g\n    let capitalRegex:RegExp = /.*[A-Z].*/g\n    let lowercaseRegex:RegExp = /.*[a-z].*/g\n    let specialCharacter:RegExp = /.*[!@#$%^&*_+=;:<>?~].*/g\n\n    if(!password){\n      return\n    }\n\n    this.passwordLongEnough = password.length >= 8 ? true : false\n    this.passwordShortEnough = password.length <= 20 ? true : false\n    this.passwordContainsNumber = password.match(numberRegex) ? true : false\n    this.passwordContainsSpecial = password.match(specialCharacter) ? true : false\n    this.passwordContainsLowercase = password.match(lowercaseRegex) ? true : false\n    this.passwordContainsCapital = password.match(capitalRegex) ? true : false\n\n    return password\n  }\n\n  private passwordCheck(): void{\n    this.passwordValid =  this.passwordLongEnough && this.passwordContainsCapital && this.passwordContainsLowercase && this.passwordContainsNumber\n           && this.passwordContainsSpecial && this.passwordShortEnough\n  }\n\n  private usernameCheck(): void{\n    this.usernameValid =  this.usernameShortEnough && this.usernameLongEnough && this.usernameUniqueBool\n  }\n}\n","<div class=\"sign-up-box\">\n    <form [formGroup]=\"newUserForm\" (ngSubmit)=\"onSubmit()\" class=\"sign-up-form\">\n        <div class=\"input-row\">\n            <label for=\"username\" class=\"username-label\">Username: </label>\n            <input id=\"username\" type=\"text\" formControlName=\"username\"  class=\"username-input\">\n        </div>\n        <ng-container class=\"username-errors\">\n            <span *ngIf=\"!usernameLongEnough\" class=\"alert-message\">*Username too short</span>\n            <span *ngIf=\"!usernameShortEnough\" class=\"alert-message\">*Username too long</span>\n            <span *ngIf=\"!usernameUniqueBool\" class=\"alert-message\">*Username must be unique</span>\n        </ng-container>\n        <div class=\"input-row\">\n            <label for=\"password\"  class=\"password-label\">Password: </label>\n            <input id=\"password\" type=\"text\" formControlName=\"password\"  class=\"password-input\">\n        </div>\n        <ng-container class=\"password-errors\">\n            <span *ngIf=\"!passwordLongEnough\" class=\"alert-message\">*Password too short</span>\n            <span *ngIf=\"!passwordShortEnough\" class=\"alert-message\">*Password too long</span>\n            <span *ngIf=\"!passwordContainsCapital\" class=\"alert-message\">*Password needs a capital letter</span>\n            <span *ngIf=\"!passwordContainsLowercase\" class=\"alert-message\">*Password needs a lowercase letter</span>\n            <span *ngIf=\"!passwordContainsNumber\" class=\"alert-message\">*Password needs a number</span>\n            <span *ngIf=\"!passwordContainsSpecial\" class=\"alert-message\">*Password needs a special character: !@#$%^&*_+=;:<>?~</span>\n        </ng-container>\n        <button class=\"login-button\" type=\"submit\" class=\"sign-up-button\">Sign Up</button>\n    </form>\n</div>","import { AfterContentInit, ChangeDetectorRef, Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ReceivedComment } from 'src/app/interfaces/recievedObjects/ReceivedComment';\nimport { ReceivedPost } from 'src/app/interfaces/recievedObjects/ReceivedPost';\nimport { AuthorizationService } from 'src/app/services/auth/authorization.service';\nimport { PostDataStorageService } from 'src/app/services/post-data-storage/post-data-storage.service';\nimport { PostDataService } from 'src/app/services/post/post-data-service.service';\n\n@Component({\n  selector: 'app-abstract-post-body',\n  templateUrl: './abstract-post-body.component.html',\n  styleUrls: ['./abstract-post-body.component.css']\n})\n\nexport class AbstractPostBodyComponent implements OnInit, OnDestroy {\n\n  postData!:ReceivedPost\n  postID!:number\n\n  constructor(protected service:PostDataService, \n              protected auth: AuthorizationService, \n              protected postStorage:PostDataStorageService,\n              protected router: Router,\n              activeRoute: ActivatedRoute\n              ) { \n    activeRoute.url.subscribe((l) => this.postID = parseInt(l[l.length - 1].toString()))\n  }\n  \n  ngOnInit(): void {\n    this.postStorage.getData(this.postID)\n                .subscribe({\n                  next: (post) => this.postData = post\n                })\n  }\n\n  ngOnDestroy(): void {\n    this.postStorage.clearData()\n  }\n}\n","<div class=\"post\">\n    <div class=\"user-info\">\n        <span>{{postData.posterName}} | {{postData.timeString}}</span>\n    </div>\n    <div>{{postData.voteTotal}}</div>\n    <ng-content select=\"[post-title]\"></ng-content>\n    <ng-content select=\"[content]\"></ng-content>\n    <ng-content select=\"[button-container]\"></ng-content>\n    <ng-content select=\"[reply-dialog]\"></ng-content>\n    <app-comment-container></app-comment-container>\n</div>\n","import { AfterContentInit, Component} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommentTransfer } from 'src/app/interfaces/CommentTransfer';\nimport { ReceivedComment } from 'src/app/interfaces/recievedObjects/ReceivedComment';\nimport { AuthorizationService } from 'src/app/services/auth/authorization.service';\nimport { DeletedCommentService } from 'src/app/services/deletedComment/deleted-comment.service';\nimport { PostDataStorageService } from 'src/app/services/post-data-storage/post-data-storage.service';\nimport { PostDataService } from 'src/app/services/post/post-data-service.service';\n@Component({\n  selector: 'app-comment-container',\n  templateUrl: './comment-container.component.html',\n  styleUrls: ['./comment-container.component.css']\n})\nexport class CommentContainerComponent implements AfterContentInit {\n\n  comments!:Array<ReceivedComment>\n  postID!:number\n\n  constructor(protected service:PostDataService, \n              protected auth: AuthorizationService, \n              protected postStorage:PostDataStorageService,\n              protected deletedComment: DeletedCommentService,\n              activeRoute: ActivatedRoute\n              ) { \n    activeRoute.url.subscribe((l) => this.postID = parseInt(l[l.length - 1].toString())) \n  }\n  \n  ngAfterContentInit(): void {\n    this.postStorage.getComments(this.postID)\n                .subscribe({\n                  next: (comments) => {\n                    this.comments = comments;\n                  }\n                })\n    this.deletedComment.getDeletedID().subscribe((id) => this.removeComment(id))  \n  }\n\n  public createDTO(comment:ReceivedComment): CommentTransfer{\n    return {commentData: comment, postID: this.postID}\n  } \n  \n  public removeComment(id: number):void {\n    this.comments = this.comments.filter((comment) => comment.commentID !== id)\n    this.postStorage.setComments(this.comments)\n  }\n\n}\n","<div class=\"container\">\n    <ul *ngFor=\"let comment of comments\">\n        <li>\n            <ng-template *appCommentType=\"comment\" (deleteComment)=\"removeChild($event)\"></ng-template>\n        </li>\n    </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractPostBodyComponent } from '../abstract-post-body/abstract-post-body.component';\nimport { UpvoteScore } from 'src/app/enums/UpvoteScore';\n\n@Component({\n  selector: 'app-logged-in-post',\n  templateUrl: './logged-in-post.component.html',\n  styleUrls: ['../user-post/user-post.component.css']\n})\nexport class LoggedInPostComponent extends AbstractPostBodyComponent implements OnInit{\n  \n  public upvoteHighlight:boolean = false;\n  public downvoteHighlight:boolean = false;\n  public replyOpen:boolean = false;\n\n  override ngOnInit() {\n      super.ngOnInit()\n      if(this.postData.userVote == UpvoteScore.Upvote){\n        this.upvoteHighlight = true\n      }\n      else if(this.postData.userVote == UpvoteScore.Downvote){\n        this.downvoteHighlight = true\n      }\n  }\n\n  public replyButton(): void{\n    this.replyOpen = !this.replyOpen\n  }\n  \n  public changeVote(previousVote:UpvoteScore , vote:UpvoteScore): void{\n    \n    this.postData.userVote = vote;\n\n    this.postData.voteTotal += -1*previousVote + vote;\n\n    if(vote === UpvoteScore.Upvote){\n      this.upvoteHighlight = true;\n      this.downvoteHighlight = false;\n    }\n    else if(vote === UpvoteScore.Downvote){\n      this.upvoteHighlight = false;\n      this.downvoteHighlight = true;\n    }\n    else{\n      this.downvoteHighlight = false;\n      this.upvoteHighlight = false;\n    }\n  }\n\n  public downvoteButton(): void{\n\n    if(this.postData.userVote === UpvoteScore.Downvote){\n      this.service.deleteVote(\n        {value: UpvoteScore.Downvote,\n        userID: this.auth.getUserID()!,\n        postID: this.postData.postID}\n      ).subscribe({\n        next: () => this.changeVote(-1, 0),\n        error: (err) => {console.error(err)}\n      })\n    }\n\n    else if(this.postData.userVote === UpvoteScore.Upvote){\n      this.service.patchVote(\n        {value: UpvoteScore.Downvote,\n          userID: this.auth.getUserID()!,\n          postID: this.postData.postID}\n      ).subscribe({\n        next: (vote) => this.changeVote(1, vote.value),\n        error: (err) => {console.error(err)}\n      })\n    }\n\n    else{\n      this.service.postVote(\n        {value: UpvoteScore.Downvote,\n          userID: this.auth.getUserID()!,\n          postID: this.postData.postID}\n      ).subscribe({\n        next: (vote) => this.changeVote(0, vote.value),\n        error: (err) => {console.error(err)}\n      })\n    }\n  }\n\n  public upvoteButton(): void{\n    if(this.postData.userVote === UpvoteScore.Upvote){\n      this.service.deleteVote(\n        {value: UpvoteScore.Upvote,\n        userID: this.auth.getUserID()!,\n        postID: this.postData.postID}\n      ).subscribe({\n        next: () => this.changeVote(1, 0),\n        error: (err) => {console.error(err)}\n      })\n    }\n\n    else if(this.postData.userVote === UpvoteScore.Downvote){\n      this.service.patchVote(\n        {value: UpvoteScore.Upvote,\n          userID: this.auth.getUserID()!,\n          postID: this.postData.postID}\n      ).subscribe({\n        next: (vote) => this.changeVote(-1, vote.value),\n        error: (err) => {console.error(err)}\n      })\n    }\n\n    else{\n      this.service.postVote(\n        {value: UpvoteScore.Upvote,\n          userID: this.auth.getUserID()!,\n          postID: this.postData.postID}\n      ).subscribe({\n        next: (vote) => this.changeVote(0, vote.value),\n        error: (err) => {console.error(err)}\n      })\n    }\n  }\n}\n","<div class=\"post-and-comments\">\n    <div class=\"user-post\">\n        <div class=\"user-info\">\n            <span>{{postData.posterName}} | {{postData.timeString}}</span>\n        </div>\n        <div class=\"post-title\">\n            <h2>{{this.postData.title}}</h2>\n        </div>\n        <div class=\"content-and-votes\">\n            <div class=\"upvote-container\">\n                <img [ngClass]= \"upvoteHighlight ? \n                'highlighted-upvote' : 'unhighlighted-upvote'\" \n                (click) = \"upvoteButton()\" src=\"assets/svg/down.svg\"/>\n                <div class= \"voteTotal\">\n                    {{postData.voteTotal}}\n                </div>\n                <img [ngClass]= \"downvoteHighlight ? \n                'highlighted-downvote' : 'unhighlighted-downvote'\" \n                (click) = \"downvoteButton()\" src=\"assets/svg/down.svg\"/>\n            </div>\n            <div class=\"content\">\n                {{this.postData.content}}\n                <div class=\"button-container\" *ngIf=\"!this.replyOpen\">\n                    <button class=\"reply\" (click)=\"replyButton()\">\n                        <img class=\"button-graphic\" src=\"assets/svg/comment.svg\" alt=\"\">\n                        <span>Reply</span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class=\"reply-dialog\" *ngIf=\"this.replyOpen\">\n            <app-reply-box [postID]=\"this.postData.postID\" (deleteDialog)=\"replyButton()\"></app-reply-box>\n        </div>\n    </div>\n    <app-comment-container></app-comment-container>\n    </div>","import { Component } from '@angular/core';\nimport { AbstractPostBodyComponent } from '../abstract-post-body/abstract-post-body.component';\n\n@Component({\n  selector: 'app-not-logged-in-post',\n  templateUrl: './not-logged-in-post.component.html',\n  styleUrls: ['../user-post/user-post.component.css', './not-logged-in-post.component.css']\n})\nexport class NotLoggedInPostComponent extends AbstractPostBodyComponent{\n\n\n}\n","<div class=\"post-and-comments\">\n    <div class=\"user-post\">\n        <div class=\"user-info\">\n            <span>{{postData.posterName}} | {{postData.timeString}}</span>\n        </div>\n        <div class=\"post-title\">\n            <h2>{{this.postData.title}}</h2>\n        </div>\n        <div class=\"content-and-votes\">\n            <div class=\"votes\">\n                <span>{{postData.voteTotal}}</span>\n            </div>\n            <div class=\"content\">\n                {{this.postData.content}}\n            </div>\n        </div>\n    </div>\n<app-comment-container></app-comment-container>\n</div>","import { Component, Input, OnInit} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ReceivedPost } from 'src/app/interfaces/recievedObjects/ReceivedPost';\nimport { PostDataStorageService } from 'src/app/services/post-data-storage/post-data-storage.service';\n\n@Component({\n  selector: 'app-posts-container',\n  templateUrl: './posts-container.component.html',\n  styleUrls: ['./posts-container.component.css']\n})\nexport class PostsContainerComponent implements OnInit{\n  \n  public postData!:ReceivedPost\n\n  constructor(private postDataStorage:PostDataStorageService, private route:ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.route.url.subscribe({\n      next:(url) => this.setData(url[url.length - 1].toString())\n    })\n  }\n\n  private setData(idString: string) {\n    const id = parseInt(idString)\n    this.postDataStorage.getData(id).subscribe({\n      next: (post) => this.postData = post\n    })\n  }\n}\n","<ng-template *appPostSelector=\"this.postData\"></ng-template>\n","import { Component } from '@angular/core';\nimport { LoggedInPostComponent } from '../logged-in-post/logged-in-post.component';\nimport { ReceivedPost } from 'src/app/interfaces/recievedObjects/ReceivedPost';\n\n@Component({\n  selector: 'app-user-post',\n  templateUrl: './user-post.component.html',\n  styleUrls: ['./user-post.component.css']\n})\nexport class UserPostComponent extends LoggedInPostComponent {\n  \n  public editActive:boolean = false\n\n  public editButton():void{\n    this.editActive = !this.editActive\n  }\n\n  public updatePostData(post:ReceivedPost): void{\n    this.postData.content = post.content\n  }\n\n  public deleteButton(): void{\n    this.service.deletePost(this.postID)\n                .subscribe(() => this.router.navigateByUrl(''))\n  }\n\n}\n","<div class=\"post-and-comments\">\n<div class=\"user-post\">\n    <div class=\"user-info\">\n        <span>{{postData.posterName}} | {{postData.timeString}}</span>\n    </div>\n    <div class=\"post-title\">\n        <h2>{{this.postData.title}}</h2>\n    </div>\n    <div class=\"content-and-votes\">\n        <div class=\"upvote-container\">\n            <img [ngClass]= \"upvoteHighlight ? \n            'highlighted-upvote' : 'unhighlighted-upvote'\" \n            (click) = \"upvoteButton()\" src=\"assets/svg/down.svg\"/>\n            <div class= \"voteTotal\">\n                {{postData.voteTotal}}\n            </div>\n            <img [ngClass]= \"downvoteHighlight ? \n            'highlighted-downvote' : 'unhighlighted-downvote'\" \n            (click) = \"downvoteButton()\" src=\"assets/svg/down.svg\"/>\n        </div>\n        <div class=\"content\">\n            <ng-container *ngIf=\"this.editActive\">\n                <app-post-edit [text]=\"this.postData.content\" [postData]=\"this.postData\" (deleteDialog)=\"editButton()\">\n                </app-post-edit>\n            </ng-container>\n            <ng-container *ngIf=\"!this.editActive\">\n                {{this.postData.content}}\n                <div *ngIf=\"!this.editActive && !this.replyOpen\" class=\"button-container\">\n                    <button class=\"reply\" (click)=\"replyButton()\">\n                        <img class=\"button-graphic\" src=\"assets/svg/comment.svg\" alt=\"\">\n                        <span>Reply</span>\n                    </button>\n                    <button class=\"edit\" (click)=\"editButton()\">\n                        <img class=\"button-graphic\" src=\"assets/svg/edit.svg\" alt=\"\">\n                        <span>Edit</span>\n                    </button>\n                    <button class=\"delete\" (click)=\"deleteButton()\">\n                        <img class=\"button-graphic\" src=\"assets/svg/delete.svg\" alt=\"\">\n                        <span>Delete</span>\n                    </button>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n    <div class=\"reply-dialog\" *ngIf=\"this.replyOpen\">\n        <app-reply-box [postID]=\"this.postData.postID\" (deleteDialog)=\"replyButton()\"></app-reply-box>\n    </div>\n</div>\n<app-comment-container></app-comment-container>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { ReceivedPost } from 'src/app/interfaces/recievedObjects/ReceivedPost';\nimport { PostDataService } from 'src/app/services/post/post-data-service.service';\n\n@Component({\n  selector: 'app-search-results',\n  templateUrl: './search-results.component.html',\n  styleUrls: ['../../../homepageComponents/post-card-container/post-card-container.component.css', './search-results.component.css']\n})\nexport class SearchResultsComponent implements OnInit {\n\n  posts = new BehaviorSubject<Array<ReceivedPost>>([])\n  postsExist = false\n  page = 0\n  outOfPosts = false\n  loading = false\n\n  query!:string\n\n  constructor(private activatedRoute: ActivatedRoute, private postService: PostDataService) { \n    activatedRoute.queryParamMap\n        .subscribe((paramMap) => {\n          let queryStr = paramMap.get(\"query\")\n          if(!queryStr){\n            this.query = \"\"\n          }\n          else{\n            this.query = queryStr\n          }\n\n          let pageStr = paramMap.get(\"pageNumber\")\n          if(!pageStr || !parseInt(pageStr)){\n            this.page = 0\n          }\n          else{\n            this.page = parseInt(pageStr)\n          }\n        })\n  }\n\n  ngOnInit(): void {\n    this.posts.subscribe(\n      (p) => {this.postsExist = p.length > 0}\n    )\n    this.posts.next([])\n    this.page = 0\n    this.loadPage(0)\n  }\n\n  public loadPage(page:number): void{\n    this.postService.search(this.query, page)\n        .subscribe((p) => this.updatePosts(p))\n  }\n\n  public updatePosts(newPosts: Array<ReceivedPost>) : void{\n    if(newPosts.length > 0){\n      this.posts.next([...this.posts.value,...newPosts])\n      this.loading = false\n      this.outOfPosts = false\n    }\n    else{\n      this.loading = false\n      this.outOfPosts = true\n    }\n  }\n\n  public onScroll() : void{\n    this.page += 1\n    this.loadPage(this.page)\n  }\n\n}\n","<ng-container>\n    <div *ngIf=\"!postsExist\" class=\"empty-cards\">\n        No results found for \"{{this.query}}\"\n    </div>\n    <div *ngIf=\"postsExist\" class=\"post-card-container\"\n        infiniteScroll\n        [infiniteScrollDistance]=\"2\"\n        [infiniteScrollThrottle]=\"50\"\n        (scrolled)=\"onScroll()\">\n        <h3>Results found for \"{{this.query}}\"</h3>\n        <ul *ngFor=\"let post of posts | async\">\n            <li>\n                <app-post-card [postData]=\"post\"></app-post-card>\n            </li>\n        </ul>\n        <div *ngIf=\"this.loading\" class=\"loading-container\">\n            <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n        </div>\n        <div *ngIf=\"this.outOfPosts\" class=\"out-of-posts-container\">\n            No more posts match this search\n        </div>\n    </div>\n</ng-container>\n","import { Component, EventEmitter, \n  Input, OnInit, Output } from '@angular/core';\n\nimport { FormControl, FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-abstract-text-box',\n  templateUrl: './abstract-text-box.component.html',\n  styleUrls: ['./abstract-text-box.component.css']\n})\nexport class AbstractTextBoxComponent implements OnInit{\n\n  @Input() text!: string;\n\n  @Output() deleteDialog = new EventEmitter<boolean>();\n  formText:FormControl = new FormControl(this.text)\n\n  ngOnInit(): void {\n    this.formText.setValue(this.text)\n  }\n  \n  onSubmit(): void {\n  }\n\n  public cancelButton(): void{\n    this.deleteDialog.emit()\n  }\n\n}\n","<form (ngSubmit)=\"onSubmit()\">\n    <input type=\"text\"  [formControl]=\"formText\" name=\"inputTextBox\">\n    <ng-content select=\"[submit]\"></ng-content>\n    <button class=\"cancel\" (click)=\"cancelButton()\">cancel</button>\n</form>","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-character-count',\n  templateUrl: './character-count.component.html',\n  styleUrls: ['./character-count.component.css']\n})\nexport class CharacterCountComponent implements OnChanges {\n\n  @Input() maxLength!:number\n\n  @Input() content!: string\n\n  @Output() withinLengthEmitter = new EventEmitter<boolean>()\n\n  currentLength:number = 0\n  withinLength:boolean = true\n\n  constructor() { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.currentLength = this.content.length\n    if(this.content.length <= this.maxLength){\n      this.withinLengthEmitter.emit(true)\n      this.withinLength = true\n    }\n    else{\n      this.withinLengthEmitter.emit(false)\n      this.withinLength = false\n    }\n  }\n}\n","<div class=\"message-container\">\n    <span [ngClass]=\"withinLength ? 'within-length-message' : 'overflow-message'\">{{this.currentLength}}/{{this.maxLength}}</span>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractTextBoxComponent } from '../abstract-text-box/abstract-text-box.component';\nimport { CommentService } from 'src/app/services/comment/comment-service.service';\nimport { ReceivedComment } from 'src/app/interfaces/recievedObjects/ReceivedComment';\nimport { CommentRequest } from 'src/app/interfaces/requestObjects/CommentRequest';\nimport { PostDataStorageService } from 'src/app/services/post-data-storage/post-data-storage.service';\nimport { environment } from 'src/environments/environment';\nimport { debounceTime } from 'rxjs';\nimport { AuthorizationService } from 'src/app/services/auth/authorization.service';\n\n@Component({\n  selector: 'app-comment-edit',\n  templateUrl: './comment-edit.component.html',\n  styleUrls: ['./comment-edit.component.css']\n})\nexport class CommentEditComponent extends AbstractTextBoxComponent implements OnInit {\n\n  @Input() commentData!:ReceivedComment;\n  @Output() commentDataChange = new EventEmitter<ReceivedComment>();\n\n  postID!:number\n\n  currentText!: string;\n  withinLength:boolean = true;\n  MAX_LENGTH = environment.COMMENT_LENGTH;\n\n  constructor(private service:CommentService, \n              postDataStorage: PostDataStorageService,\n              private auth: AuthorizationService){\n    super()\n    postDataStorage.getID().subscribe((id) => this.postID = id!)\n  }\n\n  override ngOnInit() : void {\n    super.ngOnInit()\n    this.currentText = this.formText.value\n    this.formText.valueChanges\n        .pipe(debounceTime(200))\n        .subscribe((text) => this.currentText = text)\n}\n\n\n  private updateView(text:string){\n    this.commentData.content = text\n    this.commentDataChange.emit(this.commentData)\n    this.deleteDialog.emit()\n  }\n\n  public override onSubmit(){\n    if(!this.validateEdit()){\n      return\n    }\n\n    let comment:CommentRequest = {\n      userID: this.commentData.userID,\n      postID: this.postID,\n      content: this.formText.value\n    }\n\n    this.service.patchComment(comment, this.commentData.commentID)\n                .subscribe({\n                  next: (rec) => {this.updateView(rec)},\n                  error: (err) => {alert(`Something went wrong with updating the comment: ${err}`)}\n                })\n  }\n\n  public updateLengthConstraint(b:boolean) : void{\n    this.withinLength = b\n  } \n\n  public validateEdit() : boolean{\n    if(!this.withinLength){\n      alert(\"Post too long to post\")\n      return false\n    }\n    let userID = this.auth.getUserID();\n    if (userID == null){\n      alert(\"Something went wrong. Please log in again\")\n      return false\n    }\n    return true\n  }\n}\n","<form class=\"edit-container\">\n    <textarea name=\"inputTextBox\" \n    [formControl]=\"formText\"\n    class=\"comment-area\"\n    >\n    </textarea>\n    <div class=\"buttons-and-length-container\">\n        <div class=\"button-container\">\n            <button type=\"submit\" (click)=\"onSubmit()\">\n                <img class=\"button-graphic\" src=\"assets/svg/submit.svg\" alt=\"\">\n                <span class=\"button-text\">Submit</span>\n            </button>\n            <button class=\"cancel\" (click)=\"cancelButton()\">\n                <img class=\"button-graphic\" src=\"assets/svg/cancel.svg\" alt=\"\">\n                <span class=\"button-text\">Cancel</span>\n            </button>\n        </div>\n        <app-character-count (withinLengthEmitter)=\"updateLengthConstraint($event)\" [maxLength]=\"MAX_LENGTH\" [content]=\"currentText\"></app-character-count>\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { PostDataService } from 'src/app/services/post/post-data-service.service';\nimport { Router } from '@angular/router';\nimport { PostRequest } from 'src/app/interfaces/requestObjects/PostRequest';\nimport { AuthorizationService } from 'src/app/services/auth/authorization.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport { debounceTime } from 'rxjs';\n\n@Component({\n  selector: 'app-new-post',\n  templateUrl: './new-post.component.html',\n  styleUrls: ['./new-post.component.css']\n})\nexport class NewPostComponent implements OnInit{\n\n  form = new FormGroup({\n    title: new FormControl(\"Title\"),\n    body: new FormControl(\"Body\")\n  })\n\n  titleClicked = false\n  bodyClicked = false\n\n  currentTitle!: string;\n  withinLengthTitle:boolean = true;\n  MAX_LENGTH_TITLE = environment.TITLE_LENGTH;\n\n  currentContent!: string;\n  withinLengthContent:boolean = true;\n  MAX_LENGTH_CONTENT = environment.POST_LENGTH;\n\n  constructor(private service:PostDataService, private auth:AuthorizationService, private router:Router){\n  }\n\n  ngOnInit(): void {\n    this.currentTitle = \"Title\"\n    this.currentContent = \"Body\"\n    this.form.controls.body.valueChanges\n        .pipe(debounceTime(200))\n        .subscribe((text) => \n          this.currentContent = text!\n        )\n    this.form.controls.title.valueChanges\n        .pipe(debounceTime(200))\n        .subscribe((text) => \n          this.currentTitle = text!\n        )\n  }\n  \n  public post(): void{\n    if(!this.validatePost()){\n      return\n    }\n    let postRequest: PostRequest = {\n      userID: this.auth.getUserID()!,\n      content: this.form.value.body!,\n      title: this.form.value.title!\n    }\n    this.service.postPost(postRequest).subscribe({\n      next: (post) => {this.router.navigateByUrl(`Posts/${post.postID}`)}\n    })\n  }\n\n  public cancelButton(): void {\n      this.router.navigateByUrl('')\n  }\n\n  public titleClick(): void{\n    if(!this.titleClicked){\n      this.titleClicked = true\n      this.form.patchValue({title: \"\"})\n    }\n  }\n\n  public bodyClick(): void{\n    if(!this.bodyClicked){\n      this.bodyClicked =  true\n      this.form.patchValue({body: \"\"})\n    }\n  }\n\n  public updateLengthConstraintTitle(b: boolean): void{\n    this.withinLengthTitle = b\n  }\n\n  public updateLengthConstraintBody(b: boolean): void{\n    this.withinLengthContent = b\n  }\n\n  private validatePost() : boolean{\n    if(!this.auth.testLogin()){\n      alert(\"Login expired. Please log back in to submit\")\n      return false\n    }\n    if(!this.withinLengthContent){\n      alert(\"Content too long\")\n      return false\n    }\n    if(!this.withinLengthTitle){\n      alert(\"Title too long\")\n      return false\n    }\n    return true\n  }\n}\n","<div class=\"form-page\">\n    <form [formGroup]=\"form\" class=\"form-container\">\n        <input type=\"text\" formControlName=\"title\" [ngClass]=\"titleClicked ? 'title-input' : 'title-area-unclicked'\" (click)=\"titleClick()\">\n        <div class=\"character-count-container\">\n            <app-character-count (withinLengthEmitter)=\"updateLengthConstraintTitle($event)\" [maxLength]=\"MAX_LENGTH_TITLE\" [content]=\"currentTitle\"></app-character-count>\n        </div>\n        <textarea name=\"inputTextBox\" formControlName=\"body\" [ngClass]=\"bodyClicked ? 'body-area' : 'body-area-unclicked'\" (click)=\"bodyClick()\"></textarea>\n        <div class=\"character-count-container\">\n            <app-character-count (withinLengthEmitter)=\"updateLengthConstraintBody($event)\" [maxLength]=\"MAX_LENGTH_CONTENT\" [content]=\"currentContent\"></app-character-count>\n        </div>\n        <button (click)=\"post()\">Post</button>\n    </form>\n</div>","import { Component, Input, OnInit} from '@angular/core';\nimport { AbstractTextBoxComponent } from '../abstract-text-box/abstract-text-box.component';\nimport { PostDataService } from 'src/app/services/post/post-data-service.service';\nimport { PostRequest } from 'src/app/interfaces/requestObjects/PostRequest';\nimport { ReceivedPost } from 'src/app/interfaces/recievedObjects/ReceivedPost';\nimport { PostDataStorageService } from 'src/app/services/post-data-storage/post-data-storage.service';\nimport { AuthorizationService } from 'src/app/services/auth/authorization.service';\nimport { environment } from 'src/environments/environment';\nimport { debounceTime } from 'rxjs';\n\n@Component({\n  selector: 'app-post-edit',\n  templateUrl: './post-edit.component.html',\n  styleUrls: ['./post-edit.component.css']\n})\nexport class PostEditComponent extends AbstractTextBoxComponent implements OnInit {\n  \n  @Input() postData!:ReceivedPost\n\n  currentText!: string;\n  withinLength:boolean = true;\n  MAX_LENGTH = environment.POST_LENGTH;\n\n  constructor(private service: PostDataService, \n              private postDataStorage: PostDataStorageService,\n              private auth: AuthorizationService)\n  {\n    super()\n  }\n\n  override ngOnInit() : void {\n      super.ngOnInit()\n      this.currentText = this.formText.value\n      this.formText.valueChanges\n          .pipe(debounceTime(200))\n          .subscribe((text) => this.currentText = text)\n  }\n\n  private updateView(text:string): void{\n    this.postData.content = text\n    this.postDataStorage.setData(this.postData)\n    this.deleteDialog.emit()\n  }\n\n  public updateLengthConstraint(b:boolean) : void{\n    this.withinLength = b\n  } \n\n  override onSubmit() : void{\n    \n    if(!this.validateEdit()){\n      return\n    }\n\n    let post:PostRequest = {\n      userID: this.postData.userID,\n      content: this.formText.value,\n      title: this.postData.title\n    }\n    this.service.patchPost(post, this.postData.postID)\n                .subscribe({\n                  next: (rec) => {this.updateView(rec)},\n                  error: (err) => {alert(`Something went wrong with updating the post: ${err}`)}\n                })\n  }\n\n  public validateEdit() : boolean{\n    if(!this.withinLength){\n      alert(\"Post too long to post\")\n      return false\n    }\n    let userID = this.auth.getUserID();\n    if (userID == null){\n      alert(\"Something went wrong. Please log in again\")\n      return false\n    }\n    return true\n  }\n\n}\n","<form>\n    <textarea name=\"inputTextBox\" \n    [formControl]=\"formText\"\n    class=\"post-area\"\n    >\n    </textarea>\n    <div class=\"buttons-and-length-container\">\n        <div class=\"button-container\">\n            <button type=\"submit\" (click)=\"onSubmit()\">\n                <img class=\"button-graphic\" src=\"assets/svg/submit.svg\" alt=\"\">\n                <span class=\"button-text\">Submit</span>\n            </button>\n            <button class=\"cancel\" (click)=\"cancelButton()\">\n                <img class=\"button-graphic\" src=\"assets/svg/cancel.svg\" alt=\"\">\n                <span class=\"button-text\">Cancel</span>\n            </button>\n        </div>\n        <app-character-count (withinLengthEmitter)=\"updateLengthConstraint($event)\" [maxLength]=\"MAX_LENGTH\" [content]=\"currentText\"></app-character-count>\n    </div>\n</form>","import { Component, EventEmitter, Input,  OnInit, Output} from '@angular/core';\nimport { ReceivedComment } from 'src/app/interfaces/recievedObjects/ReceivedComment';\nimport { CommentRequest } from 'src/app/interfaces/requestObjects/CommentRequest';\nimport { AuthorizationService } from 'src/app/services/auth/authorization.service';\nimport { CommentService } from 'src/app/services/comment/comment-service.service';\nimport { AbstractTextBoxComponent } from '../abstract-text-box/abstract-text-box.component';\nimport { PostDataStorageService } from 'src/app/services/post-data-storage/post-data-storage.service';\nimport { environment } from 'src/environments/environment';\nimport { debounceTime } from 'rxjs';\n\n@Component({\n  selector: 'app-reply-box',\n  templateUrl: './reply-box.component.html',\n  styleUrls: ['./reply-box.component.css']\n})\nexport class ReplyBoxComponent extends AbstractTextBoxComponent implements OnInit{\n\n  @Input() commentID!: number;\n  @Input() postID!: number;\n\n  @Output() newComment = new EventEmitter<ReceivedComment>();\n\n  currentText!: string;\n  commentReply!:boolean;\n  withinLength:boolean = true;\n  MAX_LENGTH = environment.COMMENT_LENGTH;\n\n  constructor(private service:PostDataStorageService, \n              private auth:AuthorizationService,\n              private commentService: CommentService) {\n    super()\n  }\n\n  override ngOnInit(): void {\n      super.ngOnInit()\n      this.commentReply = this.commentID != null\n      this.currentText = \"\"\n      this.formText.valueChanges\n        .pipe(debounceTime(200))\n        .subscribe((text) => \n        this.currentText = text\n      )\n  }\n\n  override onSubmit(): void{\n    if(!this.validateComment()){\n      return\n    }\n    if (this.commentID == null){\n      this.postResponse()\n    }\n    else{\n      this.commentResponse()\n    }\n  }\n\n  private postResponse(): void{\n    let userID = this.auth.getUserID();\n    let comment:CommentRequest = {\n      userID: userID!,\n      postID: this.postID,\n      content: this.formText.value\n    }\n\n    this.service.addComment(comment)\n                .subscribe({\n                  next: () => this.closeDialog(),\n                  error: (err) => {alert(`Posting Comment Failed.${err}`)}\n                })\n  }\n\n  private commentResponse(): void{\n    let userID = this.auth.getUserID();\n    let comment:CommentRequest = {\n      userID: userID!,\n      postID: this.postID,\n      parentCommentID: this.commentID,\n      content: this.formText.value\n    }\n\n    this.commentService.postComment(comment)\n                .subscribe({\n                  next: (comment) => {this.outputommment(comment), this.closeDialog()},\n                  error: (err) => {alert(`Posting Comment Failed.${err}`)}\n                })\n  }\n\n  public updateLengthConstraint(b:boolean): void{\n    this.withinLength = b\n  }\n\n  public outputommment(comment: ReceivedComment){\n    this.newComment.emit(comment)\n  }\n\n  public closeDialog(){\n    this.deleteDialog.emit()\n  }\n\n  private validateComment(): boolean{\n    if(!this.withinLength){\n      alert(\"Comment too long to post\")\n      return false\n    }\n    let userID = this.auth.getUserID();\n    if (userID == null){\n      alert(\"Something went wrong. Please log in again\")\n      return false;\n    }\n    if (this.formText.value == null){\n      alert(\"Comment must have a body\")\n      return false;\n    }\n    return true;\n  }\n\n}\n","<form>\n    <div [ngClass]=\"commentReply?'reply-container':'post-reply'\">\n        <textarea name=\"inputTextBox\" [formControl]=\"formText\" class=\"comment-area\"></textarea>\n        <div class=\"buttons-and-length-container\">\n            <div class=\"button-container\">\n                <button type=\"submit\" (click)=\"onSubmit()\">\n                    <img class=\"button-graphic\" src=\"assets/svg/submit.svg\" alt=\"\">\n                    <span class=\"button-text\">Submit</span>\n                </button>\n                <button class=\"cancel\" (click)=\"cancelButton()\">\n                    <img class=\"button-graphic\" src=\"assets/svg/cancel.svg\" alt=\"\">\n                    <span class=\"button-text\">Cancel</span>\n                </button>\n            </div>\n            <app-character-count (withinLengthEmitter)=\"updateLengthConstraint($event)\" [maxLength]=\"MAX_LENGTH\" [content]=\"currentText\"></app-character-count>\n        </div>\n    </div>\n</form>","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { ReceivedComment } from '../interfaces/recievedObjects/ReceivedComment';\nimport { AuthorizationService } from '../services/auth/authorization.service';\nimport { ContentType } from '../enums/ContentType';\nimport { LoggedInCommentComponent } from '../components/commentComponents/logged-in-comment/logged-in-comment.component';\nimport { NotLoggedInCommentComponent } from '../components/commentComponents/not-logged-in-comment/not-logged-in-comment.component';\nimport { UserCommentComponent } from '../components/commentComponents/user-comment/user-comment.component';\nimport { CommentTransfer } from '../interfaces/CommentTransfer';\n\n@Directive({\n  selector: '[appCommentType]'\n})\nexport class CommentTypeDirective {\n\n  constructor(\n    private viewContainer: ViewContainerRef,\n    private authService: AuthorizationService) { }\n\n  @Input() set appCommentType(commentData: ReceivedComment){\n    switch(this.determineChildType(commentData)){\n      case(ContentType.LoggedIn):\n        let loggedRef = this.viewContainer.createComponent<LoggedInCommentComponent>(LoggedInCommentComponent)\n        loggedRef.instance.commentData = commentData;\n        break;\n      case(ContentType.NotLoggedIn):\n        let notLoggedRef = this.viewContainer.createComponent<NotLoggedInCommentComponent>(NotLoggedInCommentComponent)\n        notLoggedRef.instance.commentData = commentData;\n        break;\n      case(ContentType.User):\n        let userRef = this.viewContainer.createComponent<UserCommentComponent>(UserCommentComponent)\n        userRef.instance.commentData = commentData;\n    }\n  }\n\n  private determineChildType(comment: ReceivedComment): ContentType{\n    let loggedIn:boolean = this.authService.testLogin();\n    let userID:number|null = this.authService.getUserID();\n\n    if(loggedIn && userID == comment.userID){\n      return ContentType.User;\n    }\n    else if(loggedIn){\n      return ContentType.LoggedIn;\n    }\n    return ContentType.NotLoggedIn;\n  }\n}\n","import { Directive, Input, ViewContainerRef } from '@angular/core';\nimport { AuthorizationService } from '../services/auth/authorization.service';\nimport { ReceivedPost } from '../interfaces/recievedObjects/ReceivedPost';\nimport { ContentType } from '../enums/ContentType';\nimport { LoggedInPostComponent } from '../components/postComponents/logged-in-post/logged-in-post.component';\nimport { NotLoggedInPostComponent } from '../components/postComponents/not-logged-in-post/not-logged-in-post.component';\nimport { UserPostComponent } from '../components/postComponents/user-post/user-post.component';\n\n@Directive({\n  selector: '[appPostSelector]'\n})\nexport class PostSelectorDirective {\n\n  constructor(\n    private viewContainer: ViewContainerRef,\n    private authService: AuthorizationService\n  ) { }\n \n  @Input() set appPostSelector(postData: ReceivedPost){\n    this.viewContainer.clear()\n    switch(this.determineChildType(postData)){\n      case(ContentType.LoggedIn):\n        let loggedRef = this.viewContainer.createComponent<LoggedInPostComponent>(LoggedInPostComponent)\n        loggedRef.instance.postData = postData;\n        break;\n      case(ContentType.NotLoggedIn):\n        let notLoggedRef = this.viewContainer.createComponent<NotLoggedInPostComponent>(NotLoggedInPostComponent)\n        notLoggedRef.instance.postData = postData;\n        break;\n      case(ContentType.User):\n        let userRef = this.viewContainer.createComponent<UserPostComponent>(UserPostComponent)\n        userRef.instance.postData = postData;\n        break;\n    }\n  }\n\n  private determineChildType(post: ReceivedPost): ContentType{\n    let loggedIn:boolean = this.authService.testLogin();\n    let userID:number|null = this.authService.getUserID();\n\n    if(loggedIn && userID == post.userID){\n      return ContentType.User;\n    }\n    else if(loggedIn){\n      return ContentType.LoggedIn;\n    }\n    return ContentType.NotLoggedIn;\n  }\n\n}\n","export enum ContentType{\n    User = \"User\",\n    LoggedIn = \"LoggedIn\",\n    NotLoggedIn = \"NotLoggedIn\"\n}","export enum Timeframe{\n    Today = 1,\n    Week = 2,\n    Month = 3,\n    Year = 4,\n    Alltime = 5\n}","export enum UpvoteScore{\n    Upvote = 1,\n    NoVote = 0,\n    Downvote = -1\n}","import { UpvoteScore } from \"../enums/UpvoteScore\";\nimport { ReceivedComment } from \"../interfaces/recievedObjects/ReceivedComment\";\nimport { ReceivedPost } from \"../interfaces/recievedObjects/ReceivedPost\";\n\nexport const addZeroVoteComment = (comment:ReceivedComment) => {\n    if(comment.userVote == null){\n        comment.userVote = UpvoteScore.NoVote;\n    }\n    return comment;\n}\n\nexport const addZeroVotePost = (post:ReceivedPost) => {\n    if(post.userVote == null){\n        post.userVote = UpvoteScore.NoVote;\n    }\n    return post;\n}","import { Injectable } from '@angular/core';\nimport jwtDecode, { JwtPayload } from 'jwt-decode';\nimport { BehaviorSubject, Observable, catchError, map, tap, timer } from 'rxjs';\nimport { UserRequest } from 'src/app/interfaces/requestObjects/UserRequest';\nimport { errorHandler } from '../errorHandler';\nimport { routeCreator } from '../routeCreator';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\ninterface MyToken{\n  UserID: string,\n  exp: number\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthorizationService{\n\n\n  loggedIn = new BehaviorSubject<boolean>(false);\n\n  constructor(private http:HttpClient) { }\n\n  public loginRequest(userInfo:UserRequest):Observable<string>{\n    return this.http.post<string>(routeCreator(\"Session\"), userInfo, {responseType: 'text' as 'json'})\n        .pipe(map(x => {\n                        if (Object(x) instanceof HttpErrorResponse) {\n                          throw x;\n                        }\n                        return x;\n                        }),\n              catchError(errorHandler)\n              )\n  }\n\n  private setJWT(jwt: string): void{\n    localStorage.setItem(\"currentCredentials\", jwt);\n  }\n\n  public testLogin(): boolean{\n    let token = localStorage.getItem(\"currentCredentials\");\n    let userID = localStorage.getItem(\"UserID\");\n    if(token == null || userID == null){\n      this.loggedIn.next(false)\n      return false;\n    }\n    const expiry =  jwtDecode<MyToken>(token).exp\n    \n    if((Math.floor((new Date).getTime() / 1000)) >= expiry){\n      localStorage.removeItem(\"UserID\");\n      localStorage.removeItem(\"currentCredentials\");\n      this.loggedIn.next(false)\n      return false;\n    }\n    this.loggedIn.next(true)\n    return true;\n  }\n\n  public getUserID(): number | null{\n    let userID = localStorage.getItem(\"UserID\");\n    return userID ? parseInt(userID) : null;\n  }\n\n  public getExpiration(): number | null{\n    let expiration = localStorage.getItem(\"Expiration\");\n    return expiration ? parseInt(expiration) : null;\n  }\n  \n  private setUserID(jwt: string): void{\n    localStorage.setItem(\"UserID\", jwtDecode<MyToken>(jwt).UserID)\n  }\n\n  private setExpiration(jwt: string): void{\n    localStorage.setItem(\"Expiration\", jwtDecode<MyToken>(jwt).exp.toString())\n  }\n\n  public login(userInfo:UserRequest): Observable<void>{\n    return this.loginRequest(userInfo)\n              .pipe(map( (jwt) => {\n                this.setJWT(jwt),\n                this.setUserID(jwt),\n                this.setExpiration(jwt)\n                this.loggedIn.next(true),\n                this.setSessionTimer()\n              }\n            ))\n  }\n\n  public logout(){\n    localStorage.clear()\n    this.loggedIn.next(false)\n  }\n\n  public getToken(): string | null{\n    return localStorage.getItem(\"currentCredentials\");\n  }\n\n  public getLoginSubject(): BehaviorSubject<boolean>{\n    this.testLogin()\n    return this.loggedIn\n  }\n\n  public setSessionTimer(): void{\n    let date = new Date()\n    date.setDate(this.getExpiration()!)\n    timer(date).subscribe(() => this.loggedIn.next(false))\n  }\n\n}","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, map } from 'rxjs';\nimport { ReceivedComment } from 'src/app/interfaces/recievedObjects/ReceivedComment';\nimport { CommentRequest } from 'src/app/interfaces/requestObjects/CommentRequest';\nimport { routeCreator } from '../routeCreator';\nimport { errorHandler } from '../errorHandler';\nimport { CommentVoteRequest } from 'src/app/interfaces/requestObjects/CommentVoteRequest';\nimport { ReceivedCommentVote } from 'src/app/interfaces/recievedObjects/ReceivedCommentVote';\nimport { addZeroVoteComment } from '../addZeroVote';\nimport { convertCommentTime } from '../localTime';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentService{\n\n  constructor(private http: HttpClient) { }\n\n  public postComment(commentRequest: CommentRequest): Observable<ReceivedComment>{\n    return this.http.post<ReceivedComment>(routeCreator(\"Comments\"), commentRequest)\n                    .pipe(map(x => {\n                      if(Object(x) instanceof HttpErrorResponse){\n                        throw x;\n                      }\n                      return x;\n                    }),\n                    map((comment) => {return convertCommentTime(comment)}), \n                    catchError(errorHandler)\n                    );\n  }\n\n  public getComment(commentID: number): Observable<ReceivedComment>{\n    return this.http.get<ReceivedComment>(routeCreator(`Comments/${commentID}`))\n                    .pipe(map(x => {\n                      if(Object(x) instanceof HttpErrorResponse){\n                        throw x;\n                      }\n                      return addZeroVoteComment(x);\n                    }),\n                    map((comment) => {return convertCommentTime(comment)}), \n                    catchError(errorHandler));\n  }\n\n  public deleteComment(commentID: number): Observable<number>{\n    return this.http.delete<number>(routeCreator(`Comments/${commentID}`))\n                    .pipe(map(x => {\n                      if(Object(x) instanceof HttpErrorResponse){\n                        throw x;\n                      }\n                      return x;\n                      }), \n                    catchError(errorHandler));\n  }\n\n  public getChildren(commentID:number): Observable<Array<ReceivedComment>>{\n    return this.http.get<Array<ReceivedComment>>(routeCreator(`Comments/${commentID}/Children`))\n                    .pipe(map(x => {\n                      if(Object(x) instanceof HttpErrorResponse){\n                        throw x;\n                      }\n                      return x.map(c => addZeroVoteComment(c));\n                      }),\n                      map((x) => {return x.map((comment) => convertCommentTime(comment))}),\n                    catchError(errorHandler));\n  }\n\n  public patchComment(comment: CommentRequest, id: number): Observable<string>{\n    return this.http.patch(routeCreator(`Comments/${id}`), comment, {responseType: \"text\"})\n                    .pipe(map(x => {\n                      if(Object(x) instanceof HttpErrorResponse){\n                        throw x;\n                      }\n                      return x;\n                      }), \n                    catchError(errorHandler));\n  }\n\n  public postCommentVote(vote: CommentVoteRequest): Observable<ReceivedCommentVote>{\n    return this.http.post<ReceivedCommentVote>(routeCreator(`Comments/${vote.commentID}/Votes`), vote)\n                    .pipe(map(x => {\n                      if(Object(x) instanceof HttpErrorResponse){\n                        throw x;\n                      }\n                      return x;\n                      }), \n                    catchError(errorHandler));\n  }\n\n  public patchCommentVote(vote: CommentVoteRequest): Observable<ReceivedCommentVote>{\n    return this.http.patch<ReceivedCommentVote>(routeCreator(`Comments/${vote.commentID}/Votes`), vote)\n                    .pipe(map(x => {\n                      if(Object(x) instanceof HttpErrorResponse){\n                        throw x;\n                      }\n                      return x;\n                      }), \n                    catchError(errorHandler));\n  }\n\n  public deleteCommentVote(vote: CommentVoteRequest): Observable<ReceivedCommentVote>{\n    return this.http.delete<ReceivedCommentVote>(routeCreator(`Comments/${vote.commentID}/Votes`), {body: vote})\n                    .pipe(map(x => {\n                      if(Object(x) instanceof HttpErrorResponse){\n                        throw x;\n                      }\n                      return x;\n                      }), \n                    catchError(errorHandler));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeletedCommentService {\n\n  private commentID = new BehaviorSubject<number>(0)\n\n  constructor() { }\n\n  public updateID(id: number) : void{\n    this.commentID.next(id)\n    this.commentID.next(0)\n  }\n\n  public getDeletedID(): BehaviorSubject<number>{\n    return this.commentID\n  }\n}\n","import { HttpErrorResponse } from \"@angular/common/http\"\nimport { throwError } from \"rxjs\";\n\nexport const errorHandler = (error: HttpErrorResponse) =>{\n    if(error.status === 0){\n        console.error(\"Client Error:\", error.message);\n    }\n    else{\n        console.error(\n            \"Backend Error\", error.message\n        );\n    }\n    return throwError(() => new Error(`Something went wrong: ${error.message}`));\n}","import { Injectable } from '@angular/core';\nimport { AuthorizationService } from '../auth/authorization.service';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderInterceptService implements  HttpInterceptor{\n\n  constructor(private authorization: AuthorizationService ) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let jwt = this.authorization.getToken();\n    if(jwt && this.authorization.testLogin() == false){\n      alert(\"Login credentials expired. Please log in again\");\n    }\n    else if(jwt){\n      console.log(next.handle(req.clone({headers: req.headers.set(\"Authorization\", jwt)})))\n      return next.handle(req.clone({headers: req.headers.set(\"Authorization\", jwt)}))\n    }\n    console.log(req)\n    return next.handle(req);\n  }\n\n}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, map } from 'rxjs';\nimport { ReceivedPost } from 'src/app/interfaces/recievedObjects/ReceivedPost';\nimport { routeCreator } from '../routeCreator';\nimport { addZeroVotePost } from '../addZeroVote';\nimport { errorHandler } from '../errorHandler';\nimport { convertPostTime } from '../localTime';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomepageService {\n\n  constructor(private http:HttpClient) { }\n\n  public getTopAllTime(page: number): Observable<Array<ReceivedPost>>{\n    return this.http.get<Array<ReceivedPost>>(routeCreator(`Homepage/AllTime/${page}`))\n                    .pipe(map(x => {\n                      if (x instanceof HttpErrorResponse) {\n                        throw x;\n                      }\n                      return x.map(post => addZeroVotePost(post));\n                      }),\n                      map((x) => {return x.map((post) => convertPostTime(post))}),\n                      catchError(errorHandler)\n                    )\n  }\n\n  public getTopYear(page: number): Observable<Array<ReceivedPost>>{\n    return this.http.get<Array<ReceivedPost>>(routeCreator(`Homepage/Year/${page}`))\n                    .pipe(map(x => {\n                      if (x instanceof HttpErrorResponse) {\n                        throw x;\n                      }\n                      return x.map(post => addZeroVotePost(post));\n                      }),\n                      map((x) => {return x.map((post) => convertPostTime(post))}),\n                      catchError(errorHandler)\n                    )\n  }\n\n  public getTopMonth(page: number): Observable<Array<ReceivedPost>>{\n    return this.http.get<Array<ReceivedPost>>(routeCreator(`Homepage/Month/${page}`))\n                    .pipe(map(x => {\n                      if (x instanceof HttpErrorResponse) {\n                        throw x;\n                      }\n                      return x.map(post => addZeroVotePost(post));\n                      }),\n                      map((x) => {return x.map((post) => convertPostTime(post))}),\n                      catchError(errorHandler)\n                    )\n  }\n\n  public getTopWeek(page: number): Observable<Array<ReceivedPost>>{\n    return this.http.get<Array<ReceivedPost>>(routeCreator(`Homepage/Week/${page}`))\n                    .pipe(map(x => {\n                      if (x instanceof HttpErrorResponse) {\n                        throw x;\n                      }\n                      return x.map(post => addZeroVotePost(post));\n                      }),\n                      map((x) => {return x.map((post) => convertPostTime(post))}),\n                      catchError(errorHandler)\n                    )\n  }\n\n  public getTopToday(page: number): Observable<Array<ReceivedPost>>{\n    return this.http.get<Array<ReceivedPost>>(routeCreator(`Homepage/Today/${page}`))\n                    .pipe(map(x => {\n                      if (x instanceof HttpErrorResponse) {\n                        throw x;\n                      }\n                      return x.map(post => addZeroVotePost(post));\n                      }),\n                      map((x) => {return x.map((post) => convertPostTime(post))}),\n                      catchError(errorHandler)\n                    )\n  }\n\n\n}\n","import { ReceivedComment } from \"../interfaces/recievedObjects/ReceivedComment\";\nimport { ReceivedPost } from \"../interfaces/recievedObjects/ReceivedPost\";\n\nexport const convertCommentTime = (comment: ReceivedComment): ReceivedComment => {\n    let time = new Date(comment.timeString + \" UTC\")\n    comment.timeString = time.toLocaleString()\n    return comment\n}\n\nexport const convertPostTime = (post: ReceivedPost): ReceivedPost => {\n    let time = new Date(post.timeString + \" UTC\")\n    post.timeString = time.toLocaleString()\n    return post\n}","import { Injectable } from '@angular/core';\nimport { ReceivedPost } from 'src/app/interfaces/recievedObjects/ReceivedPost';\nimport { PostDataService } from '../post/post-data-service.service';\nimport { BehaviorSubject, Observable, map, of } from 'rxjs';\nimport { ReceivedComment } from 'src/app/interfaces/recievedObjects/ReceivedComment';\nimport { CommentService } from '../comment/comment-service.service';\nimport { CommentRequest } from 'src/app/interfaces/requestObjects/CommentRequest';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostDataStorageService {\n  \n  private data!: ReceivedPost | null\n  private id!: number | null\n  private comments = new BehaviorSubject<Array<ReceivedComment>>([])\n  private commentsLoaded:boolean\n\n  constructor(private postDataService: PostDataService,\n              private commentDataService: CommentService){\n    this.commentsLoaded = false;\n  }\n\n  public setData(data:ReceivedPost): void{\n    this.data = data\n  }\n\n  private setID(data: ReceivedPost): void{\n    this.id = data.postID\n  }\n\n  public setComments(comments: Array<ReceivedComment>): void{\n    this.comments.next(comments)\n  }\n\n  public getData(postID: number): Observable<ReceivedPost>{\n    if (!this.data){\n      return this.postDataService.getPost(postID).pipe(\n        map((data) => {this.setData(data); this.setID(data); return data})\n      )\n    }\n    else{\n      return of(this.data!)\n    }\n  }\n\n  public getComments(postID:number): BehaviorSubject<Array<ReceivedComment>>{\n    if (!this.commentsLoaded){\n        this.postDataService.getComments(postID).pipe(\n        map((comments) => {this.setComments(comments); this.commentsLoaded = true})\n      ).subscribe()\n    }\n    return this.comments\n  }\n\n  public addComment(comment: CommentRequest): Observable<ReceivedComment>{\n    return this.commentDataService.postComment(comment)\n        .pipe(map((c) => {\n          this.setComments([...this.comments.getValue(), c])\n          return c\n        }))\n  }\n\n  public clearData(): void{\n    this.data = null\n    this.comments.next([])\n    this.commentsLoaded = false\n  }\n\n  public getID(): Observable<number | null>{\n    return of(this.id)\n  }\n\n}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, map, retry } from 'rxjs/operators';\nimport { PostRequest } from 'src/app/interfaces/requestObjects/PostRequest';\nimport { routeCreator } from '../routeCreator';\nimport { errorHandler } from '../errorHandler';\nimport { ReceivedPost } from 'src/app/interfaces/recievedObjects/ReceivedPost';\nimport { ReceivedComment } from 'src/app/interfaces/recievedObjects/ReceivedComment';\nimport { PostVoteRequest } from 'src/app/interfaces/requestObjects/PostVoteRequest';\nimport { ReceivedPostVote } from 'src/app/interfaces/recievedObjects/ReceivedPostVote';\nimport { addZeroVoteComment, addZeroVotePost } from '../addZeroVote';\nimport { convertCommentTime, convertPostTime } from '../localTime';\nimport { PostTitleDTO } from 'src/app/interfaces/recievedObjects/PostTitleDTO';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostDataService{\n\n  constructor(private http: HttpClient) {\n  }\n\n  public postPost(postRequest: PostRequest): Observable<ReceivedPost>{\n    return this.http.post<ReceivedPost>(routeCreator(\"Posts\"), postRequest)\n                    .pipe(map(x => {\n                      if (x instanceof HttpErrorResponse) {\n                        throw x;\n                      }\n                      return x;\n                      }),\n                      map((x) => {return convertPostTime(x)}),\n                      catchError(errorHandler)\n                    )\n  }\n\n  public getPost(id: number): Observable<ReceivedPost>{\n    return this.http.get<ReceivedPost>(routeCreator(`Posts/${id}`))\n                    .pipe(map(x => {\n                        if (x instanceof HttpErrorResponse) {\n                          throw x;\n                        }\n                        return addZeroVotePost(x);\n                        }),\n                        map((x) => {return convertPostTime(x)}),\n                        catchError(errorHandler)\n      )\n  }\n\n  public patchPost(postRequest: PostRequest, postID: number): Observable<string>{\n    return this.http.patch(routeCreator(`Posts/${postID}`), postRequest, {responseType: \"text\"})\n                    .pipe(map(x => {\n                      if (typeof x !== \"string\") {\n                        throw x;\n                      }\n                      return x;\n                      }),\n                      catchError(errorHandler)\n                    )\n  }\n\n  public deletePost(id:number): Observable<number>{\n    return this.http.delete<number | HttpErrorResponse>(routeCreator(`Posts/${id}`))\n                    .pipe(map(x => {\n                      if (x instanceof HttpErrorResponse) {\n                        throw x;\n                      }\n                      return x;\n                      }),\n                      catchError(errorHandler)\n                    )\n  }\n\n  public getComments(id:number): Observable<Array<ReceivedComment>>{\n    return this.http.get<Array<ReceivedComment>>(routeCreator(`Posts/${id}/Comments`))\n                    .pipe(map(x => {\n                      if (x instanceof HttpErrorResponse) {\n                        throw x;\n                      }\n                      return x.map(c => addZeroVoteComment(c));\n                      }),\n                      map((x) => {return x.map((comment) => convertCommentTime(comment))}),\n                      catchError(errorHandler)\n                    )\n  }\n\n  public postVote(voteRequest: PostVoteRequest): Observable<ReceivedPostVote>{\n    return this.http.post<ReceivedPostVote>(routeCreator(`Posts/${voteRequest.postID}/Votes`), voteRequest)\n                    .pipe(map(x => {\n                      if (x instanceof HttpErrorResponse) {\n                        throw x;\n                      }\n                      return x;\n                      }),\n                      catchError(errorHandler)\n                    )\n  }\n\n  public patchVote(voteRequest:PostVoteRequest): Observable<ReceivedPostVote>{\n    return this.http.patch<ReceivedPostVote>(routeCreator(`Posts/${voteRequest.postID}/Votes`), voteRequest)\n                    .pipe(map(x => {\n                      if (x instanceof HttpErrorResponse) {\n                        throw x;\n                      }\n                      return x;\n                      }),\n                      catchError(errorHandler)\n                    )\n  }\n\n  public deleteVote(voteRequest:PostVoteRequest): Observable<ReceivedPostVote>{\n    return this.http.delete<ReceivedPostVote>(routeCreator(`Posts/${voteRequest.postID}/Votes`), {body: voteRequest})\n                    .pipe(map(x => {\n                      if (x instanceof HttpErrorResponse) {\n                        throw x;\n                      }\n                      return x;\n                      }),\n                      catchError(errorHandler)\n                    )\n  }\n\n  public getSuggested(query: string): Observable<Array<PostTitleDTO>>{\n    if(!query || query.trim() === \"\"){\n      return of([])\n    }\n    return this.http.get<Array<PostTitleDTO>>(routeCreator(`Posts/Suggested?query=${query.trim()}`))\n                    .pipe(map(x => {\n                      if (x instanceof HttpErrorResponse) {\n                        throw x;\n                      }\n                      return x;\n                      }),\n                      catchError(errorHandler)\n                    )\n  }\n\n  public search(query: string, page: number): Observable<Array<ReceivedPost>>{\n    if(!query || query.trim() === \"\"){\n      return of([])\n    }\n    return this.http.get<Array<ReceivedPost>>(routeCreator(`Posts?query=${query.trim()}&pageNumber=${page}`))\n                    .pipe(map(x => {\n                              if (x instanceof HttpErrorResponse) {\n                                throw x;\n                              }\n                              return x;\n                              }),\n                              catchError(errorHandler)\n                            )\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PreviousUrlService{\n\n  private history = new BehaviorSubject<Array<string>>([\"\"])\n  private previous = new BehaviorSubject<string>(\"\")\n\n  constructor(private router:Router) { }\n\n  public begin(): void {\n    this.router.events\n        .pipe(filter(eve => eve instanceof NavigationEnd))\n        .subscribe(\n          (eve) => {\n            let endEvent = eve as NavigationEnd\n            let previousURL:string = \"\"\n            if(endEvent.urlAfterRedirects){\n              previousURL = endEvent.urlAfterRedirects\n            }\n            let history = this.history.value\n            this.previous.next(history[history.length-1])\n            this.history.next([...history, previousURL])\n          }\n        )\n  }\n\n  public getHistory(): BehaviorSubject<Array<string>> {\n    return this.history\n  }\n\n  public getPrevious(): BehaviorSubject<string>{\n    return this.previous\n  }\n\n}\n\n","import { environment } from \"src/environments/environment\"\n\nexport const routeCreator = (endOfURL: string): string => {\n    return `${environment.API_URL}${endOfURL}`;\n}\n\nexport const frontendRoute = (endOfURL: string): string => {\n    return `${environment.FRONTEND_URL}${endOfURL}`\n}","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, map } from 'rxjs';\nimport { ReceivedUser} from 'src/app/interfaces/recievedObjects/ReceivedUser';\nimport { UserRequest } from 'src/app/interfaces/requestObjects/UserRequest';\nimport { routeCreator } from '../routeCreator';\nimport { errorHandler } from '../errorHandler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  public createUser(userRequest:UserRequest): Observable<ReceivedUser>{\n    return this.http.post<ReceivedUser>(routeCreator('Users'), userRequest)\n                    .pipe(map(x => {\n                      if (x instanceof HttpErrorResponse) {\n                        throw x;\n                      }\n                      return x;\n                      }),\n                      catchError(errorHandler)\n                    )\n  };\n\n  public deleteUser(userID: number): Observable<number>{\n    return this.http.delete<number | HttpErrorResponse>(routeCreator(`Users/${userID}`))\n                    .pipe(map(x => {\n                      if (x instanceof HttpErrorResponse) {\n                        throw x;\n                      }\n                      return x;\n                      }),\n                      catchError(errorHandler)\n                    )\n  };\n\n  public getUser(userID: number): Observable<ReceivedUser>{\n    return this.http.get<ReceivedUser>(routeCreator(`Users/${userID}`))\n                    .pipe(map(x => {\n                      if (x instanceof HttpErrorResponse) {\n                        throw x;\n                      }\n                      return x;\n                      }),\n                      catchError(errorHandler)\n                    )\n  };\n\n  public checkUsernameUniqueness(username: string): Observable<boolean>{\n    return this.http.get(routeCreator(`Users/unique?username=${username}`))\n                    .pipe(map(x => {\n                      if (typeof x !== \"boolean\") {\n                        throw x;\n                      }\n                      return x;\n                      }),\n                      catchError(errorHandler)\n                    )\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: \"https://3b8n5a4xr7.execute-api.us-east-2.amazonaws.com/api/\",\n  FRONTEND_URL: \"http://localhost:4200/\",\n  COMMENT_LENGTH: 1500,\n  POST_LENGTH: 5000,\n  TITLE_LENGTH: 200\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["SimpleChanges","BehaviorSubject","Timeframe","i0","PostCardContainerComponent","constructor","homepageService","ngOnInit","posts","subscribe","p","postsExist","length","ngOnChanges","changes","next","page","loadPage","loading","outOfPosts","timeframe","Alltime","getTopAllTime","updatePosts","Year","getTopYear","Month","getTopMonth","Week","getTopWeek","Today","getTopToday","newPosts","value","onScroll","selectors","inputs","features","decls","vars","consts","template","ActivatedRoute","SearchResultsComponent","activatedRoute","postService","queryParamMap","paramMap","queryStr","get","query","pageStr","parseInt","search"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}